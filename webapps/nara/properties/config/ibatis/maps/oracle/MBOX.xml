<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="MBOX">
	<select id="select_mbox_count_type_01"
	            parameterClass="java.util.HashMap"
	            resultClass="java.lang.Integer">
	    SELECT 
	    	COUNT(*) CNT
	    FROM MBOX
	    <dynamic prepend="WHERE">
	  		<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
	  		<isNotNull prepend="AND" property= "MBOX_NAME">
				MBOX_NAME = #MBOX_NAME#
			</isNotNull>
			<isNotNull prepend="AND" property= "MBOX_REF">
				MBOX_REF = #MBOX_REF#
			</isNotNull>
		</dynamic> 
	</select>

	<select id="select_mbox_type_01"
					parameterClass="java.util.HashMap"
					resultClass="com.nara.jdf.db.entity.WebMailBoxEntity"> 
		SELECT <![CDATA[ /*+index(mbox, idx_mbox_01)*/ ]]> 
		      MBOX.USERS_IDX ,
			  MBOX.MBOX_IDX , 
			  MBOX.MBOX_TYPE ,
			  MBOX.MBOX_REF, 
			  MBOX.MBOX_NAME , 
			  MBOX.MBOX_PUBLIC ,
			  decode(MBOX_TYPE 
		       ,'1', 'Inbox'
		       ,'2', 'SendBox'
		       ,'3', 'Trash'
		       ,'4', 'Draft'
		       ,'5', 'Spam',
		       MBOX_NAME
		       ) as MBOX_NAME_ENG  , 
			  NVL(SUM($MAIL_TABLE$.M_SIZE), 0) AS MBOX_SIZE ,
			  SUM(CASE WHEN (($MAIL_TABLE$.M_ORDER = 0) AND ($MAIL_TABLE$.M_ISREAD IN ('N', 'P'))) THEN 1 ELSE 0 END) AS  MBOX_NEW_MAILCOUNT,
			  SUM(CASE WHEN $MAIL_TABLE$.M_ORDER = 0 THEN 1 ELSE 0 END) AS  MBOX_MAILCOUNT
		FROM MBOX LEFT JOIN $MAIL_TABLE$ ON MBOX.MBOX_IDX= $MAIL_TABLE$.MBOX_IDX and $MAIL_TABLE$.USERS_IDX = #USERS_IDX#
		WHERE MBOX.USERS_IDX = #USERS_IDX# 
		GROUP BY MBOX.MBOX_IDX, MBOX.USERS_IDX, MBOX.MBOX_TYPE, MBOX.MBOX_REF, MBOX.MBOX_NAME , MBOX.MBOX_PUBLIC
		ORDER BY MBOX.MBOX_TYPE, MBOX.MBOX_NAME, MBOX.MBOX_IDX
	</select> 
	<select id="select_mbox_type_02"
					parameterClass="java.util.HashMap"
					resultClass="com.nara.jdf.db.entity.WebMailBoxEntity"> 
		SELECT
			  AA.USERS_IDX ,
			  AA.MBOX_IDX , 
			  AA.MBOX_TYPE ,
			  AA.MBOX_REF, 
			  AA.MBOX_NAME , 
			  AA.MBOX_SIZE ,
			  AA.MBOX_MAILCOUNT 
		FROM MBOX AA
		WHERE AA.USERS_IDX = #USERS_IDX#
		ORDER by MBOX_TYPE, MBOX_NAME, MBOX_IDX, MBOX_REF
	</select>
		 
	<select id="isPrivateMBox"
				parameterClass="java.lang.String"
				resultClass="java.lang.Integer" >
		SELECT
			COUNT(*) CNT
		FROM MBOX
		WHERE USERS_IDX = #USERS_IDX#
		AND   MBOX_TYPE = 6 	
	</select>
	<select id="getPrivateMBox"
				parameterClass="java.lang.String"
				resultClass="java.util.HashMap" >
		SELECT 
			AA.USERS_IDX,
		
			AA.MBOX_IDX MBOX_IDX1,
			AA.MBOX_TYPE MBOX_TYPE1,
			AA.MBOX_NAME MBOX_NAME1,
			AA.MBOX_SIZE MBOX_SIZE1,	
			AA.MBOX_MAILCOUNT MBOX_MAILCOUNT1,
			AA.MBOX_REF MBOX_REF1,
			AA.MBOX_SUBSCRIBE MBOX_SUBSCRIBE1,
		
			BB.MBOX_IDX MBOX_IDX2,
			BB.MBOX_TYPE MBOX_TYPE2,
			LPAD(' ', 4)||BB.MBOX_NAME MBOX_NAME2,
			BB.MBOX_SIZE MBOX_SIZE2,	
			BB.MBOX_MAILCOUNT MBOX_MAILCOUNT2,
			BB.MBOX_REF MBOX_REF2,
			BB.MBOX_SUBSCRIBE MBOX_SUBSCRIBE2,
			
			CC.MBOX_IDX MBOX_IDX3,
			CC.MBOX_TYPE MBOX_TYPE3,
			LPAD(' ', 8)||CC.MBOX_NAME MBOX_NAME3,
			CC.MBOX_SIZE MBOX_SIZE3,	
			CC.MBOX_MAILCOUNT MBOX_MAILCOUNT3,
			CC.MBOX_REF MBOX_REF3,
			CC.MBOX_SUBSCRIBE MBOX_SUBSCRIBE3,
			
			DD.MBOX_IDX MBOX_IDX4,
			DD.MBOX_TYPE MBOX_TYPE4,
			LPAD(' ', 12)||DD.MBOX_NAME MBOX_NAME4,
			DD.MBOX_SIZE MBOX_SIZE4,	
			DD.MBOX_MAILCOUNT MBOX_MAILCOUNT4,
			DD.MBOX_REF MBOX_REF4,
			DD.MBOX_SUBSCRIBE MBOX_SUBSCRIBE4
		FROM MBOX AA LEFT JOIN MBOX BB ON AA.MBOX_IDX = BB.MBOX_REF
		LEFT JOIN MBOX CC ON BB.MBOX_IDX = CC.MBOX_REF
		LEFT JOIN MBOX DD ON CC.MBOX_IDX = DD.MBOX_REF
		WHERE AA.MBOX_TYPE = 6
		AND AA.MBOX_REF = 0
		AND AA.USERS_IDX = #USERS_IDX#
		ORDER BY AA.MBOX_NAME, BB.MBOX_NAME, CC.MBOX_NAME, DD.MBOX_NAME
    </select>
    
  	<insert id="insert_mbox_type_01"
  				parameterClass="com.nara.jdf.db.entity.WebMailBoxEntity">
		INSERT INTO MBOX
		(
			MBOX_IDX,
			USERS_IDX,
			MBOX_TYPE,
			MBOX_REF,
			MBOX_NAME,
			MBOX_SIZE,
			MBOX_MAILCOUNT ,
			MBOX_PUBLIC , 
			MBOX_PASSWD
		)
		VALUES
		(
			<dynamic prepend="">
				<isGreaterEqual prepend="" property="MBOX_IDX" compareValue="1">
					#MBOX_IDX#,
				</isGreaterEqual>
				<isLessEqual prepend="" property="MBOX_IDX" compareValue="0">
					SEQ_MBOX.NEXTVAL,
				</isLessEqual>
			</dynamic>
			#USERS_IDX#,
			#MBOX_TYPE#,
			#MBOX_REF#,
			#MBOX_NAME#,
			#MBOX_SIZE#,
			#MBOX_MAILCOUNT#,
			#MBOX_PUBLIC# , 
			#MBOX_PASSWD#
		)
  	</insert>
  	
  	<delete id="delete_mbox_type_01"
  				parameterClass="java.util.HashMap">
  		DELETE FROM MBOX
  		<dynamic prepend="WHERE">
  			<isNotNull prepend="AND" property= "MBOX_IDX">
				MBOX_IDX = #MBOX_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "DOMAIN">
				SUBSTR(USERS_IDX, INSTR(USERS_IDX, '@')) = '@'||#DOMAIN#
			</isNotNull>
  		</dynamic>
  	</delete>
  	
  	<select id="getMBoxIdxByMboxType"
    			resultClass="java.lang.Integer">
    	SELECT 
    		MBOX_IDX 
    	FROM MBOX
    	
    	<dynamic prepend="WHERE">
	  		<isNotNull prepend="AND" property= "USERS_IDX">
	  			USERS_IDX = #USERS_IDX#
	  		</isNotNull>
	  		<isNotNull prepend="AND" property= "MBOX_TYPE">
	  			MBOX_TYPE = #MBOX_TYPE#
	  		</isNotNull>
	  	</dynamic>
    </select>
    
    
    <update id="update_mbox_type_01"
            parameterClass="java.util.HashMap">
    	UPDATE MBOX SET
	    	MBOX_MAILCOUNT = 0,
	    	MBOX_SIZE = 0
        <dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "MBOX_IDX">
				MBOX_IDX = #MBOX_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
		</dynamic>
	</update>
    <update id="update_mbox_type_02"
            parameterClass="java.util.HashMap">
    	UPDATE MBOX SET
	    	MBOX_NAME = #MBOX_NAME#
        <dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "MBOX_IDX">
				MBOX_IDX = #MBOX_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
		</dynamic>
	</update>
	
	<select id="select_mbox_info_type_01" 
  				parameterClass="java.util.HashMap"
  				resultClass="com.nara.jdf.db.entity.WebMailBoxEntity">
	   	
	   	SELECT 
	   	    B.USERS_IDX ,
	   		B.MBOX_IDX ,
	   		B.MBOX_TYPE , 
	   		B.MBOX_REF , 
	   		B.MBOX_NAME , 
	   		NVL(A.MBOX_SIZE, 0)  MBOX_SIZE,
	   		NVL(A.MBOX_MAILCOUNT, 0) MBOX_MAILCOUNT,
	   		B.MBOX_PASSWD 
		FROM 
			(SELECT MBOX_IDX, 
					COUNT(MBOX_IDX) MBOX_MAILCOUNT, 
					SUM(M_SIZE) MBOX_SIZE 
			 FROM $MAIL_TABLE$
			 WHERE MBOX_IDX = #MBOX_IDX# 
			 GROUP BY MBOX_IDX 
			) A RIGHT JOIN MBOX B ON B.MBOX_IDX = A.MBOX_IDX
		<dynamic prepend="WHERE">
	  		<isNotNull prepend="AND" property= "USERS_IDX">
				B.USERS_IDX = #USERS_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "MBOX_IDX">
				B.MBOX_IDX = #MBOX_IDX#
			</isNotNull>
		</dynamic>
  	</select>
  	
  	<update id="update_rechange_mbox"
            parameterClass="java.util.HashMap">
    	UPDATE MBOX 
    	SET USERS_IDX = #AFTER_USERS_IDX#
    	WHERE USERS_IDX = #BEFORE_USERS_IDX#
	</update>
	
	<update id="update_mbox_passwd" parameterClass="java.util.HashMap"> 
		UPDATE MBOX 
		SET	MBOX_PASSWD = #MBOX_PASSWD# 
		WHERE MBOX_IDX = #MBOX_IDX#
	</update>
</sqlMap>

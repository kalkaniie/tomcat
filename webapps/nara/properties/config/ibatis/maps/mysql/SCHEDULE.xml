<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="SCHEDULE">
	<select id="select_schedule_type_01"
			parameterClass="java.util.HashMap"
			resultClass="java.util.HashMap">
		SELECT 
		    SCHEDULE_IDX, 
		    P_SCHEDULE_IDX,
		    USERS_IDX,
		    USERS_NAME,
		    DOMAIN,
		    USER_GROUP_IDX,
		    SCHEDULE_SHARE,
		    SCHEDULE_TYPE,
		    SCHEDULE_TITLE,
		     <!--<![CDATA[ REPLACE(SCHEDULE_STMT,CHAR(13), '<br>') AS SCHEDULE_STMT, ]]>-->
		    SCHEDULE_STMT, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
		    DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
		    SCHEDULE_REPEAT,
		    SCHEDULE_DAYLY,
		    SCHEDULE_ALAM,
		    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
		    SCHEDULE_ALAM_WAY,
		    SCHEDULE_DDAY,
		    SHARE_GROUP_IDX,
		    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR
		FROM SCHEDULE
		
		WHERE DOMAIN = #DOMAIN#
		<![CDATA[
		AND (SCHEDULE_SDATE BETWEEN STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d') AND DATE_ADD(DATE_ADD(STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL -1 SECOND)
		      OR SCHEDULE_EDATE BETWEEN STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d') AND DATE_ADD(DATE_ADD(STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL -1 SECOND)
		      OR ( SCHEDULE_SDATE < STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d')  AND SCHEDULE_EDATE > STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'))
		     )
		]]>
		<dynamic prepend="">
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="PRIVATE">
				(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="GROUP">
				(SCHEDULE_SHARE  = 1 
				 AND SHARE_GROUP_IDX IN 
					(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
					)
				)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="TOTAL">
				(
					(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0) 
					OR (SCHEDULE_SHARE = 2) 
					OR (
						SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX IN 
							(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
							)
						)
				)
			</isEqual>
		</dynamic>
		ORDER BY SCHEDULE_SDATE ASC, SCHEDULE_TITLE
	</select>
	
	<select id="select_schedule_type_02"
			parameterClass="java.util.HashMap"
			resultClass="com.nara.jdf.db.entity.ScheduleEntity">
		SELECT 
		    SCHEDULE_IDX,
		    P_SCHEDULE_IDX,
		    USERS_IDX,
		    USERS_NAME,
		    DOMAIN,
		    USER_GROUP_IDX,
		    SCHEDULE_SHARE,
		    SCHEDULE_TYPE,
		    SCHEDULE_TITLE,
		    <!-- <![CDATA[ REPLACE(SCHEDULE_STMT,CHAR(13), '<br>') AS SCHEDULE_STMT, ]]> -->
		    SCHEDULE_STMT,
		    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
		    DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
		    SCHEDULE_REPEAT,
		    SCHEDULE_DAYLY,
		    SCHEDULE_ALAM,
		    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
		    SCHEDULE_ALAM_WAY,
		    SCHEDULE_DDAY,
		    SHARE_GROUP_IDX,
		    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR
		FROM SCHEDULE
		WHERE SCHEDULE_IDX = #SCHEDULE_IDX#
	</select>
	
	<insert id="insert_schedule_type_01"
			parameterClass="com.nara.jdf.db.entity.ScheduleEntity">
		INSERT INTO SCHEDULE
		(
			SCHEDULE_IDX,
			P_SCHEDULE_IDX,
			USERS_IDX,
			USERS_NAME,
			DOMAIN,
			USER_GROUP_IDX,
			SCHEDULE_SHARE,
			SCHEDULE_TYPE,
			SCHEDULE_TITLE,
			SCHEDULE_STMT,
			SCHEDULE_SDATE,
			SCHEDULE_EDATE,
			SCHEDULE_REPEAT,
			SCHEDULE_DAYLY,
			SCHEDULE_ALAM,
			SCHEDULE_ALAM_DATE,
			SCHEDULE_ALAM_WAY,
			SCHEDULE_DDAY,
			SHARE_GROUP_IDX
		)
		VALUES
		(
			NEXTVAL('SCHEDULE'),
			#P_SCHEDULE_IDX#,
			#USERS_IDX#,
			#USERS_NAME#,
			#DOMAIN#,
			#USER_GROUP_IDX#,
			#SCHEDULE_SHARE#,
			#SCHEDULE_TYPE#,
			#SCHEDULE_TITLE#,
			#SCHEDULE_STMT#,
			STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d %T'),
			STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d %T'),
			#SCHEDULE_REPEAT#,
			#SCHEDULE_DAYLY#,
			#SCHEDULE_ALAM#,
			STR_TO_DATE(#SCHEDULE_ALAM_DATE#, '%Y-%m-%d %T'),
			#SCHEDULE_ALAM_WAY#,
			#SCHEDULE_DDAY#,
			#SHARE_GROUP_IDX#
		)
	</insert>

	<select id="select_today_schedule"
			parameterClass="java.util.HashMap"
			resultClass="java.util.HashMap">
        <![CDATA[
		SELECT
			*
		FROM (    
			SELECT 
				SCHEDULE_IDX,
				P_SCHEDULE_IDX,
				USERS_IDX,
				USERS_NAME,
				DOMAIN,
				USER_GROUP_IDX,
				SCHEDULE_SHARE,
				SCHEDULE_TYPE,
				SCHEDULE_TITLE,
				SCHEDULE_STMT,
				SCHEDULE_SDATE,
				SCHEDULE_EDATE,
				SCHEDULE_REPEAT,
				SCHEDULE_DAYLY,
				SCHEDULE_ALAM,
				SCHEDULE_ALAM_DATE,
				SCHEDULE_ALAM_WAY,
				SCHEDULE_DDAY,
				SHARE_GROUP_IDX,
				CEIL((ROW_NUMBER() OVER(ORDER BY $orderCol$ $orderType$))/$USERS_LISTNUM$) PAGENUM
			FROM SCHEDULE 
			WHERE TRUNC(SYSDATE()) BETWEEN TRUNC(SCHEDULE_SDATE) AND TRUNC(SCHEDULE_EDATE)
			AND (
				(
					(USERS_IDX =  #USERS_IDX# AND SCHEDULE_SHARE = 0)
					OR SCHEDULE_SHARE = 2
					OR (SCHEDULE_SHARE = 1 
						AND SHARE_GROUP_IDX IN 
						(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
						)
					) 
				)
				OR (
					SCHEDULE_REPEAT = 3 
					AND DATE_FORMAT(SYSDATE(), 'D') = DATE_FORMAT(SCHEDULE_SDATE, 'D')
					OR (SCHEDULE_REPEAT = 4 
						AND (
							TRUNC(LAST_DAY(SCHEDULE_SDATE)) = TRUNC(SCHEDULE_SDATE) 
							AND TRUNC(LAST_DAY(SYSDATE())) = TRUNC(SYSDATE())
							OR  DATE_FORMAT(SCHEDULE_SDATE,'%d') =  DATE_FORMAT(SYSDATE(),'%d')
						)
					)
				   )
				OR (
					SCHEDULE_REPEAT = 5 
					AND (
						TRUNC(LAST_DAY(SCHEDULE_SDATE)) = TRUNC(SCHEDULE_SDATE) 
						AND TRUNC(LAST_DAY(SYSDATE())) = TRUNC(SYSDATE())
					)
					AND 
		            	(DATE_FORMAT(SCHEDULE_SDATE, '%m') = DATE_FORMAT(SYSDATE(), '%m')
						OR DATE_FORMAT(SCHEDULE_SDATE, '%m%d') = DATE_FORMAT(SYSDATE(), '%m%d')
		                ) 
				    )
				
			)
		  )
		WHERE PAGENUM = 1
        ]]>
	</select>
	
	<update id="update_schedule_type_01"
			parameterClass="com.nara.jdf.db.entity.ScheduleEntity">
		UPDATE SCHEDULE
		SET P_SCHEDULE_IDX= #P_SCHEDULE_IDX#,
			DOMAIN = #DOMAIN#,
			USER_GROUP_IDX = #USER_GROUP_IDX#,
			SCHEDULE_SHARE = #SCHEDULE_SHARE#,
			SCHEDULE_TYPE= #SCHEDULE_TYPE#,
			SCHEDULE_TITLE= #SCHEDULE_TITLE#,
			SCHEDULE_STMT = #SCHEDULE_STMT#,
			SCHEDULE_SDATE = STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d %T'),
			SCHEDULE_EDATE = STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d %T'),
			SCHEDULE_REPEAT = #SCHEDULE_REPEAT#,
			SCHEDULE_DAYLY = #SCHEDULE_DAYLY#,
			SCHEDULE_ALAM = #SCHEDULE_ALAM#,
			SCHEDULE_ALAM_DATE = STR_TO_DATE(#SCHEDULE_ALAM_DATE#, '%Y-%m-%d %T'),
			SCHEDULE_ALAM_WAY = #SCHEDULE_ALAM_WAY#,
			SCHEDULE_DDAY = #SCHEDULE_DDAY#,
			SHARE_GROUP_IDX = #SHARE_GROUP_IDX#
		WHERE SCHEDULE_IDX = #SCHEDULE_IDX#
	</update>
	
	<delete id="delete_schedule_type_01"
			parameterClass="java.util.HashMap">
		DELETE FROM SCHEDULE
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
			<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "SCHEDULE_IDX">
				SCHEDULE_IDX = #SCHEDULE_IDX#
			</isNotNull>
		</dynamic>	
	</delete>
	
	<select id="select_schedule_type_03"
			parameterClass="java.util.HashMap"
			resultClass="java.util.HashMap">
		SELECT
		    SCHEDULE_IDX,
		    P_SCHEDULE_IDX,
		    USERS_IDX,
		    USERS_NAME,
		    DOMAIN,
		    USER_GROUP_IDX,
		    SCHEDULE_SHARE,
		    SCHEDULE_TYPE,
		    SCHEDULE_TITLE,
		    SCHEDULE_STMT,
		    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
		    DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
		    SCHEDULE_REPEAT,
		    SCHEDULE_DAYLY,
		    SCHEDULE_ALAM,
		    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
		    SCHEDULE_ALAM_WAY,
		    SCHEDULE_DDAY,
		    SHARE_GROUP_IDX,
		    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR,
		    (TO_DAYS(SCHEDULE_SDATE) - TO_DAYS(SYSDATE())) DDAY_CNT
		FROM SCHEDULE
		WHERE DOMAIN = #DOMAIN#
		AND DATE_FORMAT(SCHEDULE_SDATE, '%Y%m%d') >= #SCHEDULE_SDATE#
		<dynamic prepend="">
			<isNotNull prepend="AND" property= "USERS_IDX">
				USERS_IDX = #USERS_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="MY_MEMORIAL_DAY">
				SCHEDULE_TYPE = 1
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="MY_D_DAY">
				SCHEDULE_DDAY = 1
			</isEqual>
		</dynamic>
		ORDER BY $orderCol$ $orderType$
		LIMIT $SKIP$, $USERS_LISTNUM$
	</select>
	
	<select id="select_schedule_type_curmonth"
			parameterClass="java.util.HashMap"
			resultClass="com.nara.jdf.db.entity.ScheduleEntity">
		 <![CDATA[  
		SELECT 
		    SCHEDULE_IDX,
		    P_SCHEDULE_IDX,
		    USERS_IDX,
		    USERS_NAME,
		    DOMAIN,
		    USER_GROUP_IDX,
		    SCHEDULE_SHARE,
		    SCHEDULE_TYPE,
		    SCHEDULE_TITLE,
		    SCHEDULE_STMT,
		    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
			DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
		    SCHEDULE_REPEAT,
		    SCHEDULE_DAYLY,
		    SCHEDULE_ALAM,
		    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
		    SCHEDULE_ALAM_WAY,
		    SCHEDULE_DDAY,
		    SHARE_GROUP_IDX,
		    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
			DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR
		FROM SCHEDULE
		
		WHERE DOMAIN = #DOMAIN#
		AND ( DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m') <=  #SCHEDULE_MONTH#  
	       	AND DATE_FORMAT(SCHEDULE_EDATE,'%Y-%m') >= #SCHEDULE_MONTH#  )
	    ]]>		      
		<dynamic prepend="">
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="PRIVATE">
				(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="GROUP">
				(SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX LIKE '%|$SHARE_GROUP_IDX$|%')
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="TOTAL">
				((USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0) OR (SCHEDULE_SHARE = 2) OR (SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX LIKE '%|$SHARE_GROUP_IDX$|%'))
			</isEqual>
		</dynamic>	
	</select>
	
	<select id="select_schedule_type_01_new"
			parameterClass="java.util.HashMap"
			resultClass="com.nara.jdf.db.entity.ScheduleEntity">
		SELECT 
		    SCHEDULE_IDX,
		    P_SCHEDULE_IDX,
		    USERS_IDX,
		    USERS_NAME,
		    DOMAIN,
		    USER_GROUP_IDX,
		    SCHEDULE_SHARE,
		    SCHEDULE_TYPE,
		    SCHEDULE_TITLE,
		     <!--<![CDATA[ REPLACE(SCHEDULE_STMT,char(13), '<br>') AS SCHEDULE_STMT, ]]>-->
		    SCHEDULE_STMT, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
		    DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
		    SCHEDULE_REPEAT,
		    SCHEDULE_DAYLY,
		    SCHEDULE_ALAM,
		    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
		    SCHEDULE_ALAM_WAY,
		    SCHEDULE_DDAY,
		    SHARE_GROUP_IDX,
		    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
		    DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR
		FROM SCHEDULE
		
		WHERE DOMAIN = #DOMAIN#
		<![CDATA[
		AND (SCHEDULE_SDATE BETWEEN STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d') AND DATE_ADD(DATE_ADD(STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL -1 SECOND)
		      OR SCHEDULE_EDATE BETWEEN STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d') AND DATE_ADD(DATE_ADD(STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'), INTERVAL 1 DAY), INTERVAL -1 SECOND)
		      OR ( SCHEDULE_SDATE < STR_TO_DATE(#SCHEDULE_SDATE#, '%Y-%m-%d')  AND SCHEDULE_EDATE > STR_TO_DATE(#SCHEDULE_EDATE#, '%Y-%m-%d'))
		     )
		]]>
		<dynamic prepend="">
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="PRIVATE">
				(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="GROUP">
				(SCHEDULE_SHARE  = 1 
				 AND SHARE_GROUP_IDX IN 
					(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
					)
				)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="TOTAL">
				(
					(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0) 
					OR (SCHEDULE_SHARE = 2) 
					OR (
						SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX IN 
							(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
							)
						)
				)
			</isEqual>
		</dynamic>
		ORDER BY SCHEDULE_SDATE ASC
	</select>	
	
	<select id="select_search_schedule"
			parameterClass="java.util.HashMap"
			resultClass="com.nara.jdf.db.entity.ScheduleEntity">
	        SELECT 
			    SCHEDULE_IDX,
			    P_SCHEDULE_IDX,
			    USERS_IDX,
			    USERS_NAME,
			    DOMAIN,
			    USER_GROUP_IDX,
			    SCHEDULE_SHARE,
			    SCHEDULE_TYPE,
			    SCHEDULE_TITLE,
			    SCHEDULE_STMT, 
			    DATE_FORMAT(SCHEDULE_SDATE, '%Y-%m-%d %T') SCHEDULE_SDATE,
			    DATE_FORMAT(SCHEDULE_EDATE, '%Y-%m-%d %T') SCHEDULE_EDATE,
			    SCHEDULE_REPEAT,
			    SCHEDULE_DAYLY,
			    SCHEDULE_ALAM,
			    DATE_FORMAT(SCHEDULE_ALAM_DATE, '%Y-%m-%d %T') SCHEDULE_ALAM_DATE,
			    SCHEDULE_ALAM_WAY,
			    SCHEDULE_DDAY,
			    SHARE_GROUP_IDX,
			    DATE_FORMAT(DATE_ADD(SCHEDULE_SDATE, INTERVAL 1 DAY) , '%w') REPEAT_WEEK, 
			    DATE_FORMAT(SCHEDULE_SDATE, '%d') REPEAT_MONTH, 
			    DATE_FORMAT(SCHEDULE_SDATE, '%m%d') REPEAT_YEAR
			FROM SCHEDULE		
			WHERE DOMAIN = #DOMAIN#
			<dynamic prepend="">
				<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="PRIVATE">
					(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0)
				</isEqual>
				<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="GROUP">
					(SCHEDULE_SHARE  = 1 
					 AND SHARE_GROUP_IDX IN 
						(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
						)
					)
				</isEqual>
				<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="TOTAL">
					(
						(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0) 
						OR (SCHEDULE_SHARE = 2) 
						OR (
							SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX IN 
								(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
								)
							)
					)
				</isEqual>
				<isNotNull prepend="" property= "strKeyword">
					<iterate property="strIndex" prepend="AND" open="(" close=")" conjunction="OR" >
		      			$strIndex[]$ like concat('%',#strKeyword#,'%')
					</iterate>			
				</isNotNull>
			</dynamic>
		ORDER BY $orderCol$ $orderType$
		LIMIT $USERS_LISTNUM$	
	</select>
	
	<select id="select_search_schedule_count"
			parameterClass="java.util.HashMap"
			resultClass="java.lang.Integer">
        SELECT
		    COUNT(SCHEDULE_IDX) CNT
		FROM SCHEDULE		
		WHERE DOMAIN = #DOMAIN#
		<dynamic prepend="">
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="PRIVATE">
				(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="GROUP">
				(SCHEDULE_SHARE  = 1 
				 AND SHARE_GROUP_IDX IN 
					(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
					)
				)
			</isEqual>
			<isEqual prepend="AND" property= "SELECT_TYPE" compareValue="TOTAL">
				(
					(USERS_IDX = #USERS_IDX# AND SCHEDULE_SHARE  = 0) 
					OR (SCHEDULE_SHARE = 2) 
					OR (
						SCHEDULE_SHARE  = 1 AND SHARE_GROUP_IDX IN 
							(
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#)))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = (SELECT P_USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#))))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#))
UNION ALL
SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM USER_GROUP WHERE P_USER_GROUP_IDX = #USER_GROUP_IDX#)))
							)
						)
				)
			</isEqual>
			<isNotNull prepend="" property= "strKeyword">
				<iterate property="strIndex" prepend="AND" open="(" close=")" conjunction="OR" >
	      			$strIndex[]$ like CONCAT('%',#strKeyword#,'%')
				</iterate>			
			</isNotNull>
		</dynamic>	
	</select>	
</sqlMap>

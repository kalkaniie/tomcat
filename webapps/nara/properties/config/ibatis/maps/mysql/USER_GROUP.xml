<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="USER_GROUP">
  	
  	<select id="select_usergroup_type_01" 
  				parameterClass="java.util.HashMap" 
  				resultClass="com.nara.jdf.db.entity.UserGroupEntity">
		SELECT
			USER_GROUP_IDX,
			P_USER_GROUP_IDX,
			DOMAIN,
      		USER_GROUP_NAME,
      		USER_GROUP_SORT_NO,
			USER_GROUP_DEFAULT,
			USER_GROUP_FUNCTION,
			USER_GROUP_VOLUME,
			USER_GROUP_MAIL,
			USER_GROUP_SCHEDULE,
			USER_GROUP_ADDRESS,
			USER_GROUP_STRUCTURE,
			USER_GROUP_SMS_QUOTA
		FROM USER_GROUP 
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull> 
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
			<isNotNull prepend="AND" property= "P_USER_GROUP_IDX">
				P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
			</isNotNull> 
			
		</dynamic>
  	</select> 	
 	<select id="select_usergroup_type_02" 
  				parameterClass="java.util.HashMap" 
  				resultClass="com.nara.jdf.db.entity.UserGroupEntity">
		SELECT
			AA.USER_GROUP_IDX,
			AA.P_USER_GROUP_IDX,
			AA.DOMAIN,
      		AA.USER_GROUP_NAME,
			AA.USER_GROUP_DEFAULT,
			AA.USER_GROUP_FUNCTION,
			AA.USER_GROUP_VOLUME,
			AA.USER_GROUP_MAIL,
			AA.USER_GROUP_SCHEDULE,
			AA.USER_GROUP_ADDRESS,
			AA.USER_GROUP_STRUCTURE,
			AA.USER_GROUP_SMS_QUOTA
		FROM USER_GROUP AA JOIN USER_GROUP_LIST BB
		ON AA.USER_GROUP_IDX = BB.USER_GROUP_IDX
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				AA.USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "DOMAIN">
				AA.DOMAIN = #DOMAIN#
			</isNotNull>
			<isNotNull prepend="AND" property= "USERS_IDX">
				BB.USERS_IDX = #USERS_IDX#
			</isNotNull>  
		</dynamic>
  	</select>
  	
  	<select id="select_usergroup_type_04" 
  				parameterClass="java.util.HashMap" 
  				resultClass="com.nara.jdf.db.entity.UserGroupEntity">
		SELECT
			USER_GROUP_IDX,
			P_USER_GROUP_IDX,
			DOMAIN,
      		USER_GROUP_NAME,
			USER_GROUP_DEFAULT,
			USER_GROUP_FUNCTION,
			USER_GROUP_VOLUME,
			USER_GROUP_MAIL,
			USER_GROUP_SCHEDULE,
			USER_GROUP_ADDRESS,
			USER_GROUP_STRUCTURE,
			USER_GROUP_SMS_QUOTA,
			( SELECT COUNT(USER_GROUP_IDX) FROM USER_GROUP 
				<dynamic prepend="WHERE">
					<isNotNull prepend="AND" property= "P_USER_GROUP_IDX">
						P_USER_GROUP_IDX = AA.USER_GROUP_IDX
					</isNotNull> 
					<isNotNull prepend="AND" property= "DOMAIN">
						DOMAIN = #DOMAIN#
					</isNotNull>
				</dynamic>
		    ) AS CHILD_GROUP_CNT
			
		FROM USER_GROUP  AA
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull> 
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
			<isNotNull prepend="AND" property= "P_USER_GROUP_IDX">
				P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
			</isNotNull> 
			
		</dynamic>
		ORDER BY USER_GROUP_SORT_NO 
  	</select>
  	
  	<select id="select_usergroup_type_05" 
  				parameterClass="java.util.HashMap" 
  				resultClass="com.nara.jdf.db.entity.UserGroupEntity">
		SELECT
			USER_GROUP_IDX,
			P_USER_GROUP_IDX,
			DOMAIN,
      		USER_GROUP_NAME,
			USER_GROUP_DEFAULT,
			USER_GROUP_FUNCTION,
			USER_GROUP_VOLUME,
			USER_GROUP_MAIL,
			USER_GROUP_SCHEDULE,
			USER_GROUP_ADDRESS,
			USER_GROUP_STRUCTURE,
			USER_GROUP_SMS_QUOTA
		FROM USER_GROUP 
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull> 
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN# AND P_USER_GROUP_IDX = 0
			</isNotNull>
			<isNotNull prepend="AND" property= "P_USER_GROUP_IDX">
				P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
			</isNotNull> 
			
		</dynamic>
  	</select>
  	
  	<select id="select_usergroup_type_06" 
  				parameterClass="java.util.HashMap" 
  				resultClass="com.nara.jdf.db.entity.UserGroupEntity">
		SELECT
			USER_GROUP_IDX,
			P_USER_GROUP_IDX,
			DOMAIN,
      		USER_GROUP_NAME,
			USER_GROUP_DEFAULT,
			USER_GROUP_FUNCTION,
			USER_GROUP_VOLUME,
			USER_GROUP_MAIL,
			USER_GROUP_SCHEDULE,
			USER_GROUP_ADDRESS,
			USER_GROUP_STRUCTURE,
			USER_GROUP_SMS_QUOTA
		FROM USER_GROUP 
		<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull> 
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN# AND USER_GROUP_DEFAULT = 1
			</isNotNull>
			<isNotNull prepend="AND" property= "P_USER_GROUP_IDX">
				P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
			</isNotNull> 
			
		</dynamic>
  	</select>
  	
  	<insert id="insert_user_group_type_01" 
  				parameterClass="com.nara.jdf.db.entity.UserGroupEntity">
  		INSERT INTO USER_GROUP
  		(
  			USER_GROUP_IDX, 
  			P_USER_GROUP_IDX, 
  			USER_GROUP_NAME, 
  			USER_GROUP_SORT_NO, 
  			DOMAIN, 
  			USER_GROUP_DEFAULT, 
  			USER_GROUP_FUNCTION, 
  			USER_GROUP_VOLUME, 
  			USER_GROUP_MAIL, 
  			USER_GROUP_SCHEDULE, 
  			USER_GROUP_STRUCTURE, 
  			USER_GROUP_SMS_QUOTA, 
  			USER_GROUP_ADDRESS
  		)
  		VALUES
  		(
			<dynamic prepend="">
				<isGreaterEqual prepend="" property="USER_GROUP_IDX" compareValue="1">
					#USER_GROUP_IDX#,
				</isGreaterEqual>
				<isEqual prepend="" property="USER_GROUP_IDX" compareValue="0">
					NEXTVAL('USER_GROUP'),
				</isEqual>
			</dynamic>
  			#P_USER_GROUP_IDX#, 
  			#USER_GROUP_NAME#, 
  			#USER_GROUP_SORT_NO#, 
  			#DOMAIN#, 
  			#USER_GROUP_DEFAULT#, 
  			#USER_GROUP_FUNCTION#, 
  			#USER_GROUP_VOLUME#, 
  			#USER_GROUP_MAIL#, 
  			#USER_GROUP_SCHEDULE#, 
  			#USER_GROUP_STRUCTURE#, 
  			#USER_GROUP_SMS_QUOTA#, 
  			#USER_GROUP_ADDRESS#  		
  		)
  	</insert>
  	
  	<insert id="insert_user_group_type_02"
	        parameterClass="com.nara.jdf.db.entity.UserGroupEntity">
		INSERT INTO USER_GROUP( 
            USER_GROUP_IDX, 
            P_USER_GROUP_IDX, 
            DOMAIN,
            USER_GROUP_SORT_NO,
            USER_GROUP_NAME, 
            USER_GROUP_DEFAULT, 
            USER_GROUP_FUNCTION, 
            USER_GROUP_VOLUME, 
            USER_GROUP_MAIL, 
            USER_GROUP_SCHEDULE, 
            USER_GROUP_ADDRESS, 
            USER_GROUP_STRUCTURE,
            USER_GROUP_SMS_QUOTA 
		)
		SELECT
			<dynamic prepend="">
				<isGreaterEqual prepend="" property="USER_GROUP_IDX" compareValue="1">
					#USER_GROUP_IDX#,
				</isGreaterEqual>
				<isEqual prepend="" property="USER_GROUP_IDX" compareValue="0">
					NEXTVAL('USER_GROUP'),
				</isEqual>
				
			</dynamic>			
			            
			#P_USER_GROUP_IDX#,    
			#DOMAIN#,
			(SELECT IFNULL(MAX(USER_GROUP_SORT_NO)+1, 1)  FROM USER_GROUP WHERE P_USER_GROUP_IDX = #P_USER_GROUP_IDX#),  
			#USER_GROUP_NAME#,     
			#USER_GROUP_DEFAULT#,  
			#USER_GROUP_FUNCTION#, 
			#USER_GROUP_VOLUME#,   
			#USER_GROUP_MAIL#,     
			#USER_GROUP_SCHEDULE#, 
			#USER_GROUP_ADDRESS#,  
			#USER_GROUP_STRUCTURE#,
			#USER_GROUP_SMS_QUOTA#
	</insert>
	
	<update id="update_root_user_group"
            parameterClass="java.util.HashMap">
         UPDATE USER_GROUP SET
         	USER_GROUP_VOLUME = #USER_GROUP_VOLUME#
         WHERE 
         	P_USER_GROUP_IDX= #P_USER_GROUP_IDX#
         AND 
         	DOMAIN = #DOMAIN#
    </update>   
	
	<update id="update_user_group_type_01"
	        parameterClass="com.nara.jdf.db.entity.UserGroupEntity">
	     UPDATE USER_GROUP SET 
            P_USER_GROUP_IDX 	= #P_USER_GROUP_IDX#, 			 
            USER_GROUP_NAME 	= #USER_GROUP_NAME#, 		  
            USER_GROUP_DEFAULT 	= #USER_GROUP_DEFAULT#, 	
            USER_GROUP_FUNCTION = #USER_GROUP_FUNCTION#,  
            USER_GROUP_VOLUME 	= #USER_GROUP_VOLUME#, 	  
            USER_GROUP_MAIL 	= #USER_GROUP_MAIL#, 		  
            USER_GROUP_SCHEDULE = #USER_GROUP_SCHEDULE#,  
            USER_GROUP_ADDRESS	= #USER_GROUP_ADDRESS#,	  
            USER_GROUP_STRUCTURE= #USER_GROUP_STRUCTURE#, 
            USER_GROUP_SMS_QUOTA= #USER_GROUP_SMS_QUOTA# 
         WHERE 
         	USER_GROUP_IDX= #USER_GROUP_IDX# 
	</update>
	
	<update id="update_user_group_type_02"
	        parameterClass="java.util.Map">
	    UPDATE USER_GROUP
	    SET	USER_GROUP_DEFAULT = #USER_GROUP_DEFAULT#
	    WHERE DOMAIN = #DOMAIN#
	</update>
	
	<update id="update_user_group_type_03"
	        parameterClass="java.util.Map">
	    UPDATE USER_GROUP
	    SET	P_USER_GROUP_IDX = #T_PARENT_IDX#
	    WHERE DOMAIN = #DOMAIN#
	    AND USER_GROUP_IDX= #USER_GROUP_IDX# 
	</update>
  	
  	<procedure id="update_user_group_sort" parameterClass="java.util.HashMap" >
        { call sp_usergroup_sort_setting(#DOMAIN#, #P_USER_GROUP_IDX#) }
    </procedure>

	<delete id="delete_user_group_type_01"
  				parameterClass="java.util.HashMap">
  		DELETE FROM USER_GROUP
  		WHERE USER_GROUP_IDX IN (SELECT USER_GROUP_IDX FROM ANACONDA_USERGROUP)
  		AND DOMAIN = #DOMAIN#  			
  	</delete>
  	
  	<delete id="delete_user_group_type_02"
  				parameterClass="java.util.HashMap">
  		DELETE FROM USER_GROUP
  		
  		<dynamic prepend="WHERE">
  			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull>
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
  		</dynamic>
  	</delete>
  	
  	<select id="select_user_group_sms_quota_info"
  	        parameterClass="java.util.HashMap"
  	        resultClass="java.util.HashMap">
		SELECT 
			AA.USER_GROUP_IDX USER_GROUP_IDX1,
			AA.USER_GROUP_NAME USER_GROUP_NAME1,
			AA.P_USER_GROUP_IDX P_USER_GROUP_IDX1,
			AA.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA1,
		
			BB.USER_GROUP_IDX USER_GROUP_IDX2,	
			CONCAT(SPACE(4),BB.USER_GROUP_NAME) USER_GROUP_NAME2,
			BB.P_USER_GROUP_IDX P_USER_GROUP_IDX2,
			BB.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA2,
			
			CC.USER_GROUP_IDX USER_GROUP_IDX3,	
			CONCAT(SPACE(8),CC.USER_GROUP_NAME) USER_GROUP_NAME3,
			CC.P_USER_GROUP_IDX P_USER_GROUP_IDX3,
			CC.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA3,
				
			DD.USER_GROUP_IDX USER_GROUP_IDX4,	
			CONCAT(SPACE(12),DD.USER_GROUP_NAME) USER_GROUP_NAME4,	
			DD.P_USER_GROUP_IDX P_USER_GROUP_IDX4,
			DD.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA4
		FROM USER_GROUP AA LEFT JOIN USER_GROUP BB ON AA.USER_GROUP_IDX = BB.P_USER_GROUP_IDX
		LEFT JOIN USER_GROUP CC ON BB.USER_GROUP_IDX = CC.P_USER_GROUP_IDX
		LEFT JOIN USER_GROUP DD ON CC.USER_GROUP_IDX = DD.P_USER_GROUP_IDX
		WHERE AA.P_USER_GROUP_IDX = 0
		<dynamic prepend="">
  			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
  		</dynamic>
		ORDER BY AA.USER_GROUP_NAME, BB.USER_GROUP_NAME, CC.USER_GROUP_NAME, DD.USER_GROUP_NAME
	</select> 
	
	<update id="update_user_group_type_04"
	        parameterClass="java.util.Map">
	    UPDATE USER_GROUP
	    
	    <dynamic prepend="">
			<isEqual prepend="SET " property= "UPDATE_TYPE" compareValue="SMS_QUOTA">
				USER_GROUP_SMS_QUOTA = #USER_GROUP_SMS_QUOTA#
			</isEqual>
		</dynamic>

	    WHERE USER_GROUP_IDX= #USER_GROUP_IDX# 
	</update>
	
	
	<select id="count_usergroup_p_idx_type_01"
	        parameterClass="java.util.HashMap"
	        resultClass="java.lang.Integer">
		SELECT COUNT(USER_GROUP_IDX)			 
	 	FROM USER_GROUP 
	 	<dynamic prepend="">
			<isNotNull prepend="WHERE" property= "USER_GROUP_IDX">
				P_USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull>
		</dynamic>
 	</select>

    <select id="select_user_group_idx"
            parameterClass="java.util.HashMap"
            resultClass="java.lang.Integer">
        SELECT USER_GROUP_IDX
        FROM USER_GROUP
        WHERE
            DOMAIN = #DOMAIN#
            <isNull prepend="AND" property="P_USER_GROUP_IDX">
            P_USER_GROUP_IDX = 0
            </isNull>
            <isNotNull prepend="AND" property="P_USER_GROUP_IDX">
            P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
            </isNotNull>
            <isNotNull prepend="AND" property="USER_GROUP_NAME">
            USER_GROUP_NAME = #USER_GROUP_NAME#
            </isNotNull>
    </select>
    
    <select id="select_user_group_idx_list"
            parameterClass="java.lang.Integer"
            resultClass="java.lang.Integer">
        SELECT USER_GROUP_IDX
        FROM USER_GROUP
        WHERE P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
    </select>
    
    <select id="get_user_group_max_sort_no"
            parameterClass="java.lang.Integer"
            resultClass="java.lang.Integer">
        SELECT IFNULL(MAX(USER_GROUP_SORT_NO),0)
        FROM USER_GROUP
        WHERE P_USER_GROUP_IDX = #P_USER_GROUP_IDX#
    </select>

    <update id="move_user_group"
            parameterClass="java.util.HashMap">
    	UPDATE USER_GROUP
    	SET P_USER_GROUP_IDX = #P_USER_GROUP_IDX#,
    	    USER_GROUP_SORT_NO = #USER_GROUP_SORT_NO#
        WHERE DOMAIN = #DOMAIN#
        AND   USER_GROUP_IDX = #USER_GROUP_IDX#
    </update>
    
    
    <select id="select_batch_type_01"
	        parameterClass="java.util.HashMap"
	        resultClass="com.nara.jdf.db.entity.BatchEntity">
		SELECT 
			BATCH_LOG_IDX,
			BATCH_LOG_RESULT,
			BATCH_LOG_SDATE,
			BATCH_LOG_EDATE ,
			BATCH_LOG_MSG 
		FROM BATCH_LOG
		<dynamic prepend="WHERE">
  			<isNotEqual property="BATCH_LOG_SDATE" compareValue="">
				BATCH_LOG_SDATE between #BATCH_LOG_SDATE# and #BATCH_LOG_EDATE#
			</isNotEqual>
		</dynamic>
		ORDER BY BATCH_LOG_IDX DESC
		LIMIT $SKIP$, $USERS_LISTNUM$	
	</select>
	
	<select id="count_batch_type_01"
	        parameterClass="java.util.HashMap"
	        resultClass="java.lang.Integer">
		SELECT
			COUNT(BATCH_LOG_IDX) CNT
		FROM BATCH_LOG
			
			<dynamic prepend="WHERE">
	  			<isNotEqual property="BATCH_LOG_SDATE" compareValue="">
					BATCH_LOG_SDATE between #BATCH_LOG_SDATE# and #BATCH_LOG_EDATE#
				</isNotEqual>
			</dynamic>
	</select>
	<select id="select_batch_type_02"
	        parameterClass="java.util.HashMap"
	        resultClass="com.nara.jdf.db.entity.BatchEntity">
		SELECT 
			BATCH_LOG_IDX,
				BATCH_LOG_RESULT,
				BATCH_LOG_SDATE,
				BATCH_LOG_EDATE ,
				BATCH_LOG_MSG 
		FROM BATCH_LOG
		<dynamic prepend="WHERE">
  			<isNotNull prepend="AND" property= "BATCH_LOG_IDX">
				BATCH_LOG_IDX = #BATCH_LOG_IDX#
			</isNotNull>
		</dynamic>
	</select>
	<delete id="delete_batch_type_01"
  				parameterClass="java.util.HashMap">
  		DELETE FROM BATCH_LOG
  		WHERE BATCH_LOG_IDX = #BATCH_LOG_IDX#
  	</delete>
  	    <select id="get_mygroup_info"
            parameterClass="java.util.HashMap"
            resultClass="java.util.HashMap">
		SELECT 
			AA.USER_GROUP_IDX USER_GROUP_IDX1,
		  	AA.P_USER_GROUP_IDX P_USER_GROUP_IDX1,
		  	AA.USER_GROUP_NAME USER_GROUP_NAME1,
		  	1 USER_GROUP_LEVEL1,
		  	AA.USER_GROUP_SORT_NO USER_GROUP_SORT_NO1,
		  	AA.DOMAIN DOMAIN1,
		  	AA.USER_GROUP_DEFAULT USER_GROUP_DEFAULT1,
		  	AA.USER_GROUP_FUNCTION USER_GROUP_FUNCTION1,
		  	AA.USER_GROUP_VOLUME USER_GROUP_VOLUME1,
		  	AA.USER_GROUP_MAIL USER_GROUP_MAIL1,
		  	AA.USER_GROUP_SCHEDULE USER_GROUP_SCHEDULE1,
		  	AA.USER_GROUP_STRUCTURE USER_GROUP_STRUCTURE1,
		  	AA.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA1,
		  	AA.USER_GROUP_ADDRESS USER_GROUP_ADDRESS1,
		  	
			BB.USER_GROUP_IDX USER_GROUP_IDX2,
		  	BB.P_USER_GROUP_IDX P_USER_GROUP_IDX2,
		  	BB.USER_GROUP_NAME USER_GROUP_NAME2,
		  	1 USER_GROUP_LEVEL2,
		  	BB.USER_GROUP_SORT_NO USER_GROUP_SORT_NO2,
		  	BB.DOMAIN DOMAIN2,
		  	BB.USER_GROUP_DEFAULT USER_GROUP_DEFAULT2,
		  	BB.USER_GROUP_FUNCTION USER_GROUP_FUNCTION2,
		  	BB.USER_GROUP_VOLUME USER_GROUP_VOLUME2,
		  	BB.USER_GROUP_MAIL USER_GROUP_MAIL2,
		  	BB.USER_GROUP_SCHEDULE USER_GROUP_SCHEDULE2,
		  	BB.USER_GROUP_STRUCTURE USER_GROUP_STRUCTURE2,
		  	BB.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA2,
		  	BB.USER_GROUP_ADDRESS USER_GROUP_ADDRESS2,	  	
		
		    CC.USER_GROUP_IDX USER_GROUP_IDX3,
		  	CC.P_USER_GROUP_IDX P_USER_GROUP_IDX3,
		  	CC.USER_GROUP_NAME USER_GROUP_NAME3,
		  	1 USER_GROUP_LEVEL3,
		  	CC.USER_GROUP_SORT_NO USER_GROUP_SORT_NO3,
		  	CC.DOMAIN DOMAIN3,
		  	CC.USER_GROUP_DEFAULT USER_GROUP_DEFAULT3,
		  	CC.USER_GROUP_FUNCTION USER_GROUP_FUNCTION3,
		  	CC.USER_GROUP_VOLUME USER_GROUP_VOLUME3,
		  	CC.USER_GROUP_MAIL USER_GROUP_MAIL3,
		  	CC.USER_GROUP_SCHEDULE USER_GROUP_SCHEDULE3,
		  	CC.USER_GROUP_STRUCTURE USER_GROUP_STRUCTURE3,
		  	CC.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA3,
		  	CC.USER_GROUP_ADDRESS USER_GROUP_ADDRESS3,
		  	
		  	DD.USER_GROUP_IDX USER_GROUP_IDX4,
		  	DD.P_USER_GROUP_IDX P_USER_GROUP_IDX4,
		  	DD.USER_GROUP_NAME USER_GROUP_NAME4,
		  	1 USER_GROUP_LEVEL4,
		  	DD.USER_GROUP_SORT_NO USER_GROUP_SORT_NO4,
		  	DD.DOMAIN DOMAIN4,
		  	DD.USER_GROUP_DEFAULT USER_GROUP_DEFAULT4,
		  	DD.USER_GROUP_FUNCTION USER_GROUP_FUNCTION4,
		  	DD.USER_GROUP_VOLUME USER_GROUP_VOLUME4,
		  	DD.USER_GROUP_MAIL USER_GROUP_MAIL4,
		  	DD.USER_GROUP_SCHEDULE USER_GROUP_SCHEDULE4,
		  	DD.USER_GROUP_STRUCTURE USER_GROUP_STRUCTURE4,
		  	DD.USER_GROUP_SMS_QUOTA USER_GROUP_SMS_QUOTA4,
		  	DD.USER_GROUP_ADDRESS USER_GROUP_ADDRESS4
		FROM USER_GROUP AA LEFT JOIN USER_GROUP BB ON AA.P_USER_GROUP_IDX = BB.USER_GROUP_IDX AND BB.P_USER_GROUP_IDX != 0
		LEFT JOIN USER_GROUP CC ON BB.P_USER_GROUP_IDX = CC.USER_GROUP_IDX AND CC.P_USER_GROUP_IDX != 0
		LEFT JOIN USER_GROUP DD ON CC.P_USER_GROUP_IDX = DD.USER_GROUP_IDX AND DD.P_USER_GROUP_IDX != 0
		WHERE AA.P_USER_GROUP_IDX != 0 
		AND AA.USER_GROUP_IDX = (SELECT USER_GROUP_IDX 
				                             FROM USER_GROUP_LIST
				                             WHERE USERS_IDX = #USERS_IDX#
				                             AND DOMAIN = #DOMAIN#
				                             LIMIT 1)
		ORDER BY AA.USER_GROUP_NAME, BB.USER_GROUP_NAME, CC.USER_GROUP_NAME, DD.USER_GROUP_NAME
    </select>
    
    <select id="select_user_group_name"
	        parameterClass="java.util.HashMap"
	        resultClass="java.lang.String">
		SELECT USER_GROUP_NAME				 
	 	FROM USER_GROUP
	 	<dynamic prepend="WHERE">
			<isNotNull prepend="AND" property= "DOMAIN">
				DOMAIN = #DOMAIN#
			</isNotNull>
			<isNotNull prepend="AND" property= "USER_GROUP_IDX">
				USER_GROUP_IDX = #USER_GROUP_IDX#
			</isNotNull>
		</dynamic>
	</select>
</sqlMap>

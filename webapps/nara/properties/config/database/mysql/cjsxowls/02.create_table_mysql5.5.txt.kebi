-- TABLE [ACCOUNT]
DROP TABLE IF EXISTS SK_USERS;
CREATE TABLE SK_USERS
(
    SK_USERS_IDX VARCHAR(200) NOT NULL,            -- 상담실 코드 PK
    USERS_IDX VARCHAR(200) NOT NULL,		   -- USERS_IDX
    SK_USERS_GUBUN CHAR(2) NOT NULL,		   -- 서비스 구분 예) T,B
    SK_USERS_CENTER_NAME VARCHAR(100) NOT NULL,	   -- 센터 명 
    SK_USERS_GROUP_NAME VARCHAR(100) NOT NULL,	   -- 그룹 명 
    SK_USERS_OFFICE_NAME VARCHAR(100) NOT NULL,	   -- 상담실 명
    SK_USERS_REGDATE DATETIME,			   -- 등록 일자
    SK_USERS_PERMIT CHAR(1) NOT NULL,		   -- 사용중 여부 (Y,N)
    PRIMARY KEY PK_SK_USERS(SK_USERS_IDX),         
    INDEX IDX_SK_USERS(USERS_IDX)
) ENGINE=INNODB;


-- TABLE [ACCOUNT]
DROP TABLE IF EXISTS ACCOUNT;
CREATE TABLE ACCOUNT
(
	ACCOUNT_IDX VARCHAR (200) NOT NULL ,
	MBOX_IDX NUMERIC (10) DEFAULT '0' NOT NULL ,
	ACCOUNT_ISVALID NUMERIC (1) DEFAULT '0' NOT NULL ,
	ACCOUNT_ISDATED NUMERIC (1) DEFAULT '0' NOT NULL ,
	ACCOUNT_SDATE DATETIME ,
	ACCOUNT_EDATE DATETIME ,
	DOMAIN VARCHAR (100) ,
	USERS_IDX VARCHAR (200) ,
	PRIMARY KEY PK_ACCOUNT(ACCOUNT_IDX),
	INDEX IDX_ACCOUNT_1 (USERS_IDX)
) ENGINE=INNODB;


-- TABLE [ACCOUNT_CHANGE]
DROP TABLE IF EXISTS ACCOUNT_CHANGE;
CREATE TABLE ACCOUNT_CHANGE
(
	USERS_IDX VARCHAR (200) NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	REQ_ID VARCHAR (100) NOT NULL ,
	REQ_PASSWD VARCHAR (100) NOT NULL ,
	REQ_DATE DATETIME NOT NULL ,
	CONFIRM_USERS_IDX VARCHAR (200) ,
	CONFIRM_DATE DATETIME ,
	STATUS CHAR (1),
	PRIMARY KEY PK_ACCOUNT_CHANGE(USERS_IDX)
) ENGINE=INNODB;


-- TABLE [ADDRESS] 
DROP TABLE IF EXISTS ADDRESS ;
CREATE TABLE ADDRESS
(
	ADDRESS_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	GROUP_IDX NUMERIC (9) NOT NULL ,
	ADDRESS_NAME VARCHAR (100) ,
	ADDRESS_SORT_NO NUMERIC NOT NULL ,
	ADDRESS_EMAIL VARCHAR (200) ,
	ADDRESS_TEL VARCHAR (100) ,
	ADDRESS_CELLTEL VARCHAR (100) ,
	ADDRESS_HOMEZIP VARCHAR (100) ,
	ADDRESS_HOMEADDR VARCHAR (100) ,
	ADDRESS_OFFICE VARCHAR (100) ,
	ADDRESS_DEPT VARCHAR (100) ,
	ADDRESS_DUTY VARCHAR (100) ,
	ADDRESS_OFFICETEL VARCHAR (100) ,
	ADDRESS_OFFICEZIP VARCHAR (100) ,
	ADDRESS_OFFICEADDR VARCHAR (100) ,
	ADDRESS_BIRTH VARCHAR (100) ,
	ADDRESS_ISSOLAR CHAR (1) ,
	ADDRESS_HOMEURL VARCHAR (200) ,
	ADDRESS_STMT text ,
	ADDRESS_OFFICEFAX VARCHAR (100) ,
	P_ADDRESS_IDX NUMERIC (9) DEFAULT 0 NOT NULL,
	INDEX IDX_ADDRESS_1 (USERS_IDX, GROUP_IDX, ADDRESS_SORT_NO),
	INDEX IDX_ADDRESS_2 (GROUP_IDX, ADDRESS_SORT_NO),
	INDEX IDX_ADDRESS_3 (ADDRESS_IDX, ADDRESS_NAME)
) ENGINE=INNODB;

-- TABLE [ADDRESS_GROUP] 
DROP TABLE IF EXISTS ADDRESS_GROUP;
CREATE TABLE ADDRESS_GROUP
(
	GROUP_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	GROUP_NM VARCHAR (1000) NOT NULL ,
	GROUP_SORT_NO NUMERIC NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	REF_GROUP_IDX NUMERIC (9) NOT NULL ,
	GROUP_STMT VARCHAR (1000) ,
	GROUP_TYPE CHAR (1) DEFAULT 'U' NOT NULL ,
	INDEX IDX_ADDRESS_GROUP_1 (USERS_IDX),
	INDEX IDX_ADDRESS_GROUP_2 (DOMAIN, GROUP_SORT_NO),
	INDEX IDX_ADDRESS_GROUP_3 (REF_GROUP_IDX)	
) ENGINE=INNODB;

-- TABLE [ANACONDA_FILE] 
DROP TABLE IF EXISTS ANACONDA_FILE;
CREATE TABLE ANACONDA_FILE
(
	FILE_KEY NUMERIC (10) NOT NULL PRIMARY KEY,
	FILE_SEQ NUMERIC (10) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	MAIL_SEQ VARCHAR (200) ,
	FILE_NAME VARCHAR (255) ,
	FILE_SUCCESS VARCHAR (3) ,
	FILE_DIR CHAR (1) ,
	FILE_SIZE NUMERIC (15) ,
	DOWN_CNT NUMERIC (10) ,
	FILE_EXPIRE VARCHAR(10) ,
	FILE_CREATE VARCHAR(10) ,
	FILE_DEL CHAR (1) ,
	FILE_CNT NUMERIC (5) DEFAULT 0 ,
	MAIL_YN CHAR (1) ,
	SHARE_YN CHAR (1) DEFAULT '0' ,
	FILE_CLIENT_DATE VARCHAR (12) ,
	FILE_ATTRIBUTE VARCHAR (10) ,
	DOWN_CNT_PERMIT NUMERIC (10) DEFAULT 0 ,
	ENCRYPT_FILE_SIZE NUMERIC DEFAULT 0 ,
	INDEX IDX_ANACONDA_FILE_01 (USERS_IDX, FILE_DEL, FILE_NAME)
) ENGINE=INNODB;

-- TABLE [ANACONDA_FILE_DEL] 
DROP TABLE IF EXISTS ANACONDA_FILE_DEL;
CREATE TABLE ANACONDA_FILE_DEL
(
	FILE_KEY NUMERIC (10) NOT NULL PRIMARY KEY,
	FILE_SEQ NUMERIC (10) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	MAIL_SEQ VARCHAR (200) ,
	FILE_NAME VARCHAR (255) ,
	FILE_SUCCESS VARCHAR (3) ,
	FILE_DIR CHAR (1) ,
	FILE_SIZE NUMERIC (15) ,
	DOWN_CNT NUMERIC (10) ,
	FILE_EXPIRE VARCHAR (10) ,
	FILE_CREATE VARCHAR (10) ,
	FILE_DEL CHAR (1) ,
	FILE_CNT NUMERIC (5) DEFAULT 0 ,
	MAIL_YN CHAR (1) ,
	SHARE_YN CHAR (1) DEFAULT '0' ,
	FILE_CLIENT_DATE VARCHAR (12) ,
	FILE_ATTRIBUTE VARCHAR (10) ,
	DOWN_CNT_PERMIT NUMERIC (10) DEFAULT 0
) ENGINE=INNODB;

-- TABLE [ANACONDA_MAIL] 
DROP TABLE IF EXISTS ANACONDA_MAIL;
CREATE TABLE ANACONDA_MAIL
(
	MAIL_KEY NUMERIC (10) NOT NULL PRIMARY KEY,
	MAIL_SEQ VARCHAR (128) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	M_SENDER VARCHAR (100) ,
	M_TO VARCHAR (2000) ,
	M_CC VARCHAR (2000) ,
	M_BCC VARCHAR (2000) ,
	MAIL_EXPIRE VARCHAR (8) ,
	MAIL_CREATE VARCHAR (8) ,
	INDEX IDX_ANACONDA_MAIL_01(USERS_IDX)
) ENGINE=INNODB;

-- [ANACONDA_SHARE] 
DROP TABLE IF EXISTS ANACONDA_SHARE;
CREATE TABLE ANACONDA_SHARE
(
	FILE_KEY NUMERIC NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	DIR_PERMISSION CHAR (1) ,
	CREATE_DATE DATETIME ,
	UPDATE_DATE DATETIME ,
	INDEX IDX_ANACONDA_SHARE_01(USERS_IDX, DIR_PERMISSION)
) ENGINE=INNODB;

-- [ANACONDA_USERGROUP] 
DROP TABLE IF EXISTS ANACONDA_USERGROUP;
CREATE TABLE ANACONDA_USERGROUP
(
	USER_GROUP_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	SERVICE_YN VARCHAR (1) ,
	PERIOD_LIMIT_YN VARCHAR (1) ,
	DOWN_LIMIT_YN VARCHAR (1) ,
	DOWN_CNT NUMERIC (10) ,
	USERGROUP_MAXQUOTA NUMERIC (15) ,
	USERGROUP_PERIOD NUMERIC (10) ,
	EXPIRE_DEL_YN VARCHAR (1) ,
	APPLYALL_YN VARCHAR (1)
) ENGINE=INNODB;

-- [ANACONDA_USERS] 
DROP TABLE IF EXISTS ANACONDA_USERS;
CREATE TABLE ANACONDA_USERS
(
	USERS_IDX VARCHAR (200) NOT NULL PRIMARY KEY,
	USERS_PERMIT CHAR (1) NOT NULL ,
	FILE_HOMEDIR VARCHAR (255) NOT NULL ,
	PERIOD_LIMIT_YN CHAR (1) ,
	DOWN_LIMIT_YN CHAR (1) ,
	DOWN_CNT NUMERIC (10) ,
	USERS_MAXQUOTA NUMERIC (15) ,
	USERS_PERIOD NUMERIC (10) ,
	EXPIRE_DEL_YN CHAR (1) ,
	FILE_WRITE_MODE CHAR (1) DEFAULT '0' ,
	FILE_USE_MODE CHAR (1) DEFAULT '0' 
) ENGINE=INNODB;

-- [AUTHORITY] 
DROP TABLE IF EXISTS AUTHORITY;
CREATE TABLE AUTHORITY
(
	AUTHORITY_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	AUTHORITY_NAME VARCHAR (100) ,
	AUTHORITY_LEVEL NUMERIC (9) ,
	AUTHORITY_ENG_NAME VARCHAR (100)
) ENGINE=INNODB;

-- [AUTODIVISION] 
DROP TABLE IF EXISTS AUTODIVISION;
CREATE TABLE AUTODIVISION
(
	AUTODIVISION_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	MBOX_IDX NUMERIC (9) ,
	AUTODIVISION_TYPE NUMERIC (1) ,
	AUTODIVISION_KEYWORD VARCHAR (200) ,
	NOTICE NUMERIC (1) DEFAULT 0 ,
	TAG_TYPE NUMERIC (1) DEFAULT 0 ,
	INDEX IDX_AUTODIVISION_01(USERS_IDX, MBOX_IDX),
	INDEX IDX_AUTODIVISION_02(USERS_IDX, AUTODIVISION_TYPE, AUTODIVISION_KEYWORD)
) ENGINE=INNODB;

-- [BASEINFO] 
DROP TABLE IF EXISTS BASEINFO;
CREATE TABLE BASEINFO
(
	BASEINFO_ID CHAR (4) NOT NULL PRIMARY KEY,
	BASEINFO_TYPE CHAR (1) ,
	BASEINFO_VALUE VARCHAR (100)
) ENGINE=INNODB;

-- [BBS] 
DROP TABLE IF EXISTS BBS;
CREATE TABLE BBS
(
	BBS_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) ,
	BBS_ADMIN VARCHAR (200) ,
	BBS_TYPE NUMERIC (1) ,
	BBS_MODE NUMERIC (1) ,
	BBS_GROUP_IDX NUMERIC (9) ,
	BBS_NAME VARCHAR (1000) ,
	BBS_USE_REPLY NUMERIC (1) ,
	BBS_USE_ATTACHE NUMERIC (1) ,
	BBS_USE_APPEND NUMERIC (1) ,
	BBS_USE_ATTACHE_SIZE NUMERIC (5) ,
	BBS_AUTH_MEMBER NUMERIC (1) ,
	BBS_AUTH_GUEST NUMERIC (1) ,
	BBS_AUTH_HIGHER NUMERIC (1) ,
	BBS_AUTH_LOWER NUMERIC (1) ,
	BBS_AUTH_EQUALTY NUMERIC (1) ,
	BBS_USE_MYPAGE NUMERIC (1) DEFAULT 0  
) ENGINE=INNODB;

-- [BBS_GROUP] 
DROP TABLE IF EXISTS BBS_GROUP;
CREATE TABLE BBS_GROUP
(
	BBS_GROUP_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) ,
	BBS_GROUP_NAME VARCHAR (100) ,
	BBS_GROUP_LEVEL NUMERIC (9)
) ENGINE=INNODB;

-- [BBS_TOP] 
DROP TABLE IF EXISTS BBS_TOP;
CREATE TABLE BBS_TOP
(
	BBS_IDX NUMERIC (9) NOT NULL ,
	B_IDX NUMERIC (10) NOT NULL ,
	PRIMARY KEY PK_BBS_TOP (BBS_IDX, B_IDX)
) ENGINE=INNODB;

-- [BBS_USERLOG] 
DROP TABLE IF EXISTS BBS_USERLOG;
CREATE TABLE BBS_USERLOG
(
	BBS_USERLOG_IDX VARCHAR (200) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL,
	BBS_USERLOG_DATE VARCHAR (20),
	PRIMARY KEY PK_BBS_USERLOG (BBS_USERLOG_IDX, USERS_IDX),
	INDEX IDX_BBS_USERLOG_01 (BBS_USERLOG_IDX, USERS_IDX)
) ENGINE=INNODB;

-- [BLOCK_MAIL_INFO] 
DROP TABLE IF EXISTS BLOCK_MAIL_INFO;
CREATE TABLE BLOCK_MAIL_INFO
(
M_IDX NUMERIC PRIMARY KEY,
	MAIL_FROM text,
	RCPT_TO text,
	FORWORD_YN CHAR (1) DEFAULT 'N' ,
	FORWORD_DATE DATETIME
) ENGINE=INNODB;

-- [CERTIFY] 
DROP TABLE IF EXISTS CERTIFY;
CREATE TABLE CERTIFY
(
	CERTIFY_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	CERTIFY_ISVALID CHAR (1) ,
	CERTIFY_NAME VARCHAR (200) ,
	CERTIFY_JUMIN1 VARCHAR (6) ,
	CERTIFY_JUMIN2 VARCHAR (7) ,
	CERTIFY_DEPARTMENT VARCHAR (100) ,
	CERTIFY_LICENCENUM VARCHAR (200)
) ENGINE=INNODB;

-- [DOMAIN] 
DROP TABLE IF EXISTS DOMAIN;
CREATE TABLE DOMAIN
(
	DOMAIN VARCHAR (100) NOT NULL PRIMARY KEY,
	DOMAIN_TYPE CHAR (1) ,
	DOMAIN_NAME VARCHAR (100) ,
	DOMAIN_JOB VARCHAR (4) ,
	DOMAIN_TEL VARCHAR (100) ,
	DOMAIN_ZIPCODE VARCHAR (10) ,
	DOMAIN_ADDRESS1 VARCHAR (100) ,
	DOMAIN_ADDRESS2 VARCHAR (100) ,
	DOMAIN_HOMEPAGE VARCHAR (100) ,
	DOMAIN_AGREEMENT CHAR (1) ,
	DOMAIN_AGREEMENT_STMT text ,
	DOMAIN_GREETINGS CHAR (1) ,
	DOMAIN_GREETINGS_FROM VARCHAR (200) ,
	DOMAIN_GREETINGS_TITLE VARCHAR (1000) ,
	DOMAIN_GREETINGS_CONTENTTYPE VARCHAR (20) ,
	DOMAIN_GREETINGS_CONTENT text ,
	DOMAIN_CERTIFY CHAR (1) ,
	DOMAIN_JOIN_CERTIFY CHAR (1) ,
	DOMAIN_JOIN_CERTIFY_OPT CHAR (1) ,
	DOMAIN_JOIN_WAY NUMERIC (1) ,
	DOMAIN_GROUP_OPT NUMERIC (1) ,
	DOMAIN_JOIN_REQUIRED_ITEM VARCHAR (100) ,
	DOMAIN_JOIN_CERTIFY_ITEM VARCHAR (100) ,
	DOMAIN_JOINDATE DATETIME ,
	DOMAIN_EXPIREDDATE DATETIME ,
	DOMAIN_LANG VARCHAR (10) ,
	DOMAIN_FUNCTION_KEY VARCHAR (20) ,
	DOMAIN_LIMIT_STORAGE NUMERIC (9) ,
	DOMAIN_LIMIT_USERS NUMERIC (9) ,
	DOMAIM_LIMIT_FORWARD NUMERIC (9) ,
	DOMAIN_LIMIT_UPLOAD NUMERIC (9) ,
	DOMAIN_USER_VOLUME NUMERIC (9) ,
	DOMAIN_MEMO text ,
	DOMAIN_DISPLAY_TOP CHAR (1) ,
	DOMAIN_DISPLAY_BOTTOM CHAR (1) ,
	DOMAIN_DISPLAY_MENU CHAR (1) ,
	DOMAIN_DISPLAY_MENU_POSITION CHAR (1) ,
	DOMAIN_TABLE_PIX NUMERIC (4) ,
	DOMAIN_TOP_PIX NUMERIC (3) ,
	DOMAIN_LEFT_SPACE NUMERIC (3) ,
	DOMAIN_BOTTOM_SPACE NUMERIC (3) ,
	DOMAIN_DISPLAY_BGIMG CHAR (1) ,
	DOMAIN_BGIMG VARCHAR (50) ,
	DOMAIN_BGCOLOR VARCHAR (10) ,
	DOMAIN_TXT_COPY VARCHAR (200) ,
	DOMAIN_COLOR_SKIN CHAR (1) ,
	DOMAIN_COLOR_TXT VARCHAR (10) ,
	DOMAIN_COLOR_TOPTXT VARCHAR (10) ,
	DOMAIN_BGCOLOR_MENU VARCHAR (10) ,
	DOMAIN_BGCOLOR_BTN VARCHAR (10) ,
	DOMAIN_COLOR_ALINK VARCHAR (10) ,
	DOMAIN_BGCOLOR_TOP VARCHAR (10) ,
	DOMAIN_BGCOLOR_TABLE VARCHAR (10) ,
	DOMAIN_COLOR_TABLELINE VARCHAR (10) ,
	DOMAIN_COLOR_COPY VARCHAR (10) ,
	DOMAIN_TOP_HTML_USE CHAR (1) ,
	DOMAIN_TOP_HTML VARCHAR (50) ,
	DOMAIN_TOP_BGCOLOR VARCHAR (10) ,
	DOMAIN_DISPLAY_TOP_BGIMG CHAR (1) ,
	DOMAIN_TOP_BGIMG VARCHAR (50) ,
	DOMAIN_TOP_BTN NUMERIC (2) ,
	DOMAIN_TOP_BTNCOLOR VARCHAR (10) ,
	DOMAIN_TOP_MENU_POS NUMERIC (1) ,
	DOMAIN_DISPLAY_LOGO CHAR (1) ,
	DOMAIN_LOGO VARCHAR (50) ,
	DOMAIN_LOGO_TXT VARCHAR (200) ,
	DOMAIN_LOGO_TXTCOLOR VARCHAR (10) ,
	DOMAIN_BTN_CNT NUMERIC (1) ,
	DOMAIN_TABLE_POS CHAR (1) ,
	DOMAIN_INPUT_TXT VARCHAR (10) ,
	DOMAIN_LOGO_LINK VARCHAR (255) ,
	DOMAIN_MOTO_USE CHAR (1) ,
	DOMAIN_MENU_PIX NUMERIC (3) ,
	DOMAIN_BTN1_TITLE VARCHAR (40) ,
	DOMAIN_BTN1_LINK VARCHAR (255) ,
	DOMAIN_BTN1_TARGET VARCHAR (40) ,
	DOMAIN_BTN1_ALT VARCHAR (60) ,
	DOMAIN_BTN2_TITLE VARCHAR (40) ,
	DOMAIN_BTN2_LINK VARCHAR (255) ,
	DOMAIN_BTN2_TARGET VARCHAR (40) ,
	DOMAIN_BTN2_ALT VARCHAR (60) ,
	DOMAIN_BTN3_TITLE VARCHAR (40) ,
	DOMAIN_BTN3_LINK VARCHAR (255) ,
	DOMAIN_BTN3_TARGET VARCHAR (40) ,
	DOMAIN_BTN3_ALT VARCHAR (60) ,
	DOMAIN_BTN4_TITLE VARCHAR (40) ,
	DOMAIN_BTN4_LINK VARCHAR (255) ,
	DOMAIN_BTN4_TARGET VARCHAR (40) ,
	DOMAIN_BTN4_ALT VARCHAR (60) ,
	DOMAIN_BTN5_TITLE VARCHAR (40) ,
	DOMAIN_BTN5_LINK VARCHAR (255) ,
	DOMAIN_BTN5_TARGET VARCHAR (40) ,
	DOMAIN_BTN5_ALT VARCHAR (60) ,
	DOMAIN_BTN6_TITLE VARCHAR (40) ,
	DOMAIN_BTN6_LINK VARCHAR (255) ,
	DOMAIN_BTN6_TARGET VARCHAR (40) ,
	DOMAIN_BTN6_ALT VARCHAR (60) ,
	DOMAIN_BTN7_TITLE VARCHAR (40) ,
	DOMAIN_BTN7_LINK VARCHAR (255) ,
	DOMAIN_BTN7_TARGET VARCHAR (40) ,
	DOMAIN_BTN7_ALT VARCHAR (60) ,
	DOMAIN_SMS_LIMIT NUMERIC (9) ,
	DOMAIN_MAIL_QUOTA NUMERIC (10) DEFAULT '0' NOT NULL ,
	DOMAIN_MAIL_BANNER NUMERIC (1) DEFAULT '0' NOT NULL ,
	DOMAIN_MAIL_BANNER_TEXT VARCHAR (2000) ,
	DOMAIN_ACCOUNT_LIMIT NUMERIC (3) DEFAULT '0' NOT NULL ,
	DOMAIN_PAUSE_DAYS NUMERIC (9) DEFAULT '0' NOT NULL ,
	DOMAIN_BIGMAIL_QUOTA BIGINT (20) ,
	DOMAIN_PWD_LOCK_COUNT NUMERIC (3) DEFAULT '0'
) ENGINE=INNODB;

ALTER TABLE DOMAIN ADD TAG_FILTER_LEVEL NUMERIC(1) DEFAULT 1;
ALTER TABLE DOMAIN ADD TAG_FILTER_0 VARCHAR(100) ;
ALTER TABLE DOMAIN ADD TAG_FILTER_1 VARCHAR(100) DEFAULT 'script,style,javascript,iframe';
ALTER TABLE DOMAIN ADD TAG_FILTER_2 VARCHAR(100) DEFAULT 'bgsound';
ALTER TABLE DOMAIN ADD TAG_FILTER_3 VARCHAR(100) ;
ALTER TABLE DOMAIN ADD TAG_FILTER_4 VARCHAR(100) ;
ALTER TABLE DOMAIN ADD TAG_FILTER_ADMIN_ROLL NUMERIC(1) DEFAULT 0;

-- [ECARD] 
DROP TABLE IF EXISTS ECARD;
CREATE TABLE ECARD
(
	ECARD_IDX NUMERIC (10) NOT NULL ,
	ECARD_THEME VARCHAR (200) NOT NULL ,
	ECARD_TITLE VARCHAR (200) ,
	ECARD_DATE DATETIME ,
	ECARD_SENDNUM NUMERIC (9) ,
	PRIMARY KEY PK_ECARD(ECARD_IDX, ECARD_THEME),
	INDEX IDX_ECARD_01(ECARD_THEME, ECARD_TITLE)
) ENGINE=INNODB;

-- [FILE_SHARE] 
DROP TABLE IF EXISTS FILE_SHARE;
CREATE TABLE FILE_SHARE
(
	FILE_SHARE_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	FILE_SHARE_FOLDER VARCHAR (2000) ,
	FILE_SHARE_AUTH CHAR (1),
	INDEX IDX_FILE_SHARE_01(USERS_IDX, FILE_SHARE_FOLDER, FILE_SHARE_AUTH)
) ENGINE=INNODB;

-- [FILTER] 
DROP TABLE IF EXISTS FILTER;
CREATE TABLE FILTER
(
	FILTER_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	FILTER_AUTH NUMERIC (1) ,
	FILTER_TYPE NUMERIC (1) ,
	FILTER_KEYWORD VARCHAR (200),
	INDEX IDX_FILTER1(USERS_IDX),
	INDEX IDX_FILTER2(FILTER_AUTH)
) ENGINE=INNODB;

-- [FORMLETTER] 
DROP TABLE IF EXISTS FORMLETTER;
CREATE TABLE FORMLETTER
(
	FORMLETTER_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	FORMLETTER_TYPE NUMERIC (3) ,
	FORMLETTER_SUBJECT VARCHAR (200) ,
	CONTENT TEXT
) ENGINE=INNODB;

-- [INJURE] 
DROP TABLE IF EXISTS INJURE;
CREATE TABLE INJURE
(
	INJURE_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	INJURE_AUTH NUMERIC (1) ,
	INJURE_KEYWORD VARCHAR (200) ,
	INDEX IDX_INJURE_1(USERS_IDX),
	INDEX IDX_INJURE_2(USERS_IDX, INJURE_KEYWORD, INJURE_AUTH)
) ENGINE=INNODB;

-- [LOGIN_LOG] 
DROP TABLE IF EXISTS LOGIN_LOG;
CREATE TABLE LOGIN_LOG
(
	LOGIN_LOG_IDX NUMERIC NOT NULL PRIMARY KEY,
	CONNECT_IDX VARCHAR (40) NOT NULL ,
	CONNECT_ID VARCHAR (20) NOT NULL ,
	DOMAIN VARCHAR (20) NOT NULL ,
	CONNECT_IP VARCHAR (15) NOT NULL ,
	CONNECT_TIME DATETIME NOT NULL ,
	LOGIN_YN CHAR (1) ,
	CERTIY_YN CHAR (1) ,
	ERROR_CODE VARCHAR (20) ,
	DESCRIPTION VARCHAR (1000) ,
	INDEX IDX_LOGIN_LOG_01(CONNECT_IDX),
	INDEX IDX_LOGIN_LOG_02(CONNECT_ID),
	INDEX IDX_LOGIN_LOG_03(CONNECT_IP),
	INDEX IDX_LOGIN_LOG_04(CONNECT_TIME),
	INDEX IDX_LOGIN_LOG_05(LOGIN_YN)
) ENGINE=INNODB;

-- [MAIL_LOG] 
DROP TABLE IF EXISTS MAIL_LOG;
CREATE TABLE MAIL_LOG
(
	MAIL_LOG_DATE DATETIME NOT NULL ,
	MAIL_LOG_DOMAIN VARCHAR (100) NOT NULL ,
	MAIL_LOG_RECEIVE_COUNT NUMERIC (10) ,
	MAIL_LOG_SEND_COUNT NUMERIC (10) ,
	MAIL_LOG_RECEIVE_VOLUME NUMERIC (20) ,
	MAIL_LOG_SEND_VOLUME NUMERIC (20) ,
	MAIL_LOG_ERROR_COUNT NUMERIC (10) ,
	PRIMARY KEY PK_MAIL_LOG (MAIL_LOG_DATE ,MAIL_LOG_DOMAIN)
) ENGINE=INNODB;

-- [MAIL_RECONF] 
DROP TABLE IF EXISTS MAIL_RECONF;
CREATE TABLE MAIL_RECONF
(
	MAIL_RECONF_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	MAIL_RECONF_TO VARCHAR (200) NOT NULL ,
	MAIL_RECONF_SUBJECT text ,
	MAIL_RECONF_STATE NUMERIC (1) ,
	MAIL_RECONF_SDATE VARCHAR (20) ,
	MAIL_RECONF_RDATE VARCHAR (20) ,
	MAIL_RECONF_MESSAGE_ID VARCHAR (255) ,
	M_IDX NUMERIC (10) ,
	MAIL_RECONF_GROUP NUMERIC (14) ,
	MAIL_RECONF_SEND CHAR (1) DEFAULT 0 ,
	MAIL_RECONF_SEND_DATE VARCHAR (20) ,
	INDEX IDX_MAIL_RECONF_01(M_IDX),
	INDEX IDX_MAIL_RECONF_02(USERS_IDX),
	INDEX IDX_MAIL_RECONF_03(MAIL_RECONF_MESSAGE_ID)
) ENGINE=INNODB;

-- [MAIL_REPORT] 
DROP TABLE IF EXISTS MAIL_REPORT;
CREATE TABLE MAIL_REPORT
(
	MAIL_REPORT_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	USERS_NAME VARCHAR (20) ,
	MAIL_REPORT_DATE VARCHAR (20) ,
	MAIL_REPORT_FROM VARCHAR (200) ,
	MAIL_REPORT_SENDDATE VARCHAR (20) ,
	MAIL_REPORT_STMT text ,
	MAIL_REPORT_STATE NUMERIC (1)
) ENGINE=INNODB;

-- [MANAGER_GRANTIP] 
DROP TABLE IF EXISTS MANAGER_GRANTIP;
CREATE TABLE MANAGER_GRANTIP
(
	GRANT_IP_IDX NUMERIC (2) NOT NULL PRIMARY KEY,
	GRANT_IP VARCHAR (15) NOT NULL ,
	USERS_IDX VARCHAR (200) ,
	INSERT_DATE DATETIME ,
	UPDATE_DATE DATETIME
) ENGINE=INNODB;

-- [MBOX] 
DROP TABLE IF EXISTS MBOX;
CREATE TABLE MBOX
(
	MBOX_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	MBOX_TYPE NUMERIC (3) NOT NULL ,
	MBOX_REF NUMERIC (10) DEFAULT '0' NOT NULL ,
	MBOX_NAME VARCHAR (50) ,
	MBOX_SIZE NUMERIC (20) ,
	MBOX_MAILCOUNT NUMERIC (6) ,
	MBOX_SUBSCRIBE CHAR (1) DEFAULT 'Y' ,
	MBOX_PUBLIC CHAR (1) DEFAULT 'P' /*PUBLIC(P) SECRET(S)*/ ,
	MBOX_PASSWD VARCHAR (128) ,
	INDEX IDX_MBOX_01(USERS_IDX, MBOX_TYPE)
) ENGINE=INNODB;

-- [MEMBER] 
DROP TABLE IF EXISTS MEMBER;
CREATE TABLE MEMBER
(
	MEMBER_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	ORGANIZE_IDX NUMERIC (9) NOT NULL ,
	AUTHORITY_IDX NUMERIC (9),
	INDEX IDX_MEMBER_1(ORGANIZE_IDX)
) ENGINE=INNODB;

-- [MEMO] 
DROP TABLE IF EXISTS MEMO;
CREATE TABLE MEMO
(
	USERS_IDX VARCHAR (25) NOT NULL PRIMARY KEY,
	MEMO_IDX NUMERIC NOT NULL ,
	MEMO_COLOR VARCHAR (20) NOT NULL ,
	MEMO_CONTENT VARCHAR (2000) NOT NULL ,
	DIPLAY_YN CHAR (1) NOT NULL ,
	CREATE_DATE DATETIME ,
	UPDATE_DATE DATETIME
) ENGINE=INNODB;

-- [MONITOR_MAIL_LOG] 
DROP TABLE IF EXISTS MONITOR_MAIL_LOG;
CREATE TABLE MONITOR_MAIL_LOG
(
	MAIL_ID VARCHAR (100) NOT NULL PRIMARY KEY,
	MAIL_HOSTNAME VARCHAR (40) NOT NULL ,
	MAIL_CREATE_DATE DATETIME NOT NULL ,
	MAIL_RESULT_DATE DATETIME ,
	MAIL_DELETE_DATE DATETIME ,
	MAIL_ORIGIN VARCHAR (10) NOT NULL ,
	MAIL_DESTINATION VARCHAR (10) NOT NULL ,
	MAIL_DOMAIN VARCHAR (40) ,
	MAIL_IP VARCHAR (40) ,
	LOG_ID VARCHAR (100) NOT NULL ,
	MAIL_SENDER VARCHAR (100) NOT NULL ,
	MAIL_RECIPIENT VARCHAR (100) NOT NULL ,
	MAIL_TYPE VARCHAR (10) NOT NULL ,
	MAIL_RESULT CHAR (1) ,
	MAIL_VOLUME NUMERIC (20) DEFAULT 0 ,
	MAIL_MESSAGE VARCHAR (200)
) ENGINE=INNODB;

-- [M_TAG_BASE] 
DROP TABLE IF EXISTS M_TAG_BASE;
CREATE TABLE M_TAG_BASE
(
	TAG_TYPE NUMERIC (3) NOT NULL ,
	TAG_NAME VARCHAR (200) ,
	TAG_IMG_NAME VARCHAR (100) NOT NULL ,
	TAG_ORD NUMERIC (3) 
) ENGINE=INNODB;

-- [NOTE_ATTACHE] 
DROP TABLE IF EXISTS NOTE_ATTACHE;
CREATE TABLE NOTE_ATTACHE
(
	NOTE_ATTACHE_IDX NUMERIC NOT NULL PRIMARY KEY,
	NOTE_ATTACHE_LOCATION VARCHAR (200) NOT NULL ,
	NOTE_ATTACHE_LOGICAL_NM VARCHAR (100) NOT NULL ,
	NOTE_ATTACHE_PHYSICAL_NM VARCHAR (100) NOT NULL ,
	NOTE_ATTACHE_SIZE NUMERIC
) ENGINE=INNODB;

-- [NOTE_RECONF] 
DROP TABLE IF EXISTS NOTE_RECONF;
CREATE TABLE NOTE_RECONF
(
	NOTE_RECONF_IDX NUMERIC NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	NOTE_IDX NUMERIC NOT NULL ,
	NOTE_RECONF_TO VARCHAR (200) ,
	NOTE_RECONF_TO_ORI VARCHAR (200) ,
	NOTE_SEND_TIME DATETIME ,
	NOTE_READ_TIME DATETIME ,
	NOTE_SEND_IDX NUMERIC ,
	NOTE_RECONF_STATE NUMERIC (1) ,
	NOTE_TITLE VARCHAR(500),
	INDEX IDX_NOTE_RECONF_1(USERS_IDX)
) ENGINE=INNODB;

-- [ORGANIZE] 
DROP TABLE IF EXISTS ORGANIZE;
CREATE TABLE ORGANIZE
(
	ORGANIZE_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	ORGANIZE_REF NUMERIC (9) ,
	ORGANIZE_STEP NUMERIC (9) ,
	ORGANIZE_LEVEL NUMERIC (9) ,
	ORGANIZE_DEF NUMERIC (9) ,
	ORGANIZE_ADMIN VARCHAR (200) ,
	ORGANIZE_NAME VARCHAR (100) ,
	ORGANIZE_TITLE VARCHAR (200) ,
	ORGANIZE_OPERATION VARCHAR (1000) ,
	ORGANIZE_STMT text ,
	ORGANIZE_SCHEDULE NUMERIC (1) ,
	ORGANIZE_SCHEDULE_HIGHER NUMERIC (1) ,
	ORGANIZE_SCHEDULE_LOWER NUMERIC (1) ,
	ORGANIZE_SCHEDULE_EQUALTY NUMERIC (1)
) ENGINE=INNODB;

-- [PASSWD_HINT] 
DROP TABLE IF EXISTS PASSWD_HINT;
CREATE TABLE PASSWD_HINT
(
	USERS_IDX VARCHAR (200) NOT NULL PRIMARY KEY,
	PASSWD_HINT_QUESTION NUMERIC (2) NOT NULL ,
	PASSWD_HINT_ANSWER VARCHAR (200) NOT NULL
) ENGINE=INNODB;

-- [POLL] 
DROP TABLE IF EXISTS POLL;
CREATE TABLE POLL
(
	POLL_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) NOT NULL ,
	DOMAIN VARCHAR (100) ,
	POLL_CONTENT VARCHAR (1024) ,
	POLL_SDATE DATETIME ,
	POLL_EDATE DATETIME ,
	POLL_PROGRESS CHAR (1)
) ENGINE=INNODB;

-- [POLL_ITEM] 
DROP TABLE IF EXISTS POLL_ITEM;
CREATE TABLE POLL_ITEM
(
	POLL_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	POLL_ITEM_NUM NUMERIC (2) ,
	POLL_ITEM_CONTENT VARCHAR (1024) ,
	POLL_ITEM_SUM NUMERIC (6)
) ENGINE=INNODB;

-- [POLL_LIST] 
DROP TABLE IF EXISTS POLL_LIST;
CREATE TABLE POLL_LIST
(
	POLL_IDX NUMERIC (9) NOT NULL ,
	USERS_IDX VARCHAR (100) 
) ENGINE=INNODB;

-- [POP] 
DROP TABLE IF EXISTS POP;
CREATE TABLE POP
(
	POP_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	POP_PROTOCOL VARCHAR (200) ,
	POP_SERVER VARCHAR (200) ,
	POP_ID VARCHAR (200) ,
	POP_PASSWD VARCHAR (200) ,
	MBOX_IDX NUMERIC (9) ,
	POP_ISDEL VARCHAR (1) ,
	POP_NAME VARCHAR (50) ,
	POP_MBOX VARCHAR (100) ,
	POP_ICON CHAR (1),
	POP_PORT VARCHAR(7) ,
    POP_SSL  CHAR (1) default 'N',
	INDEX INDEX_POP_USERS_IDX(USERS_IDX)
) ENGINE=INNODB;

-- [POPUP] 
DROP TABLE IF EXISTS POPUP;
CREATE TABLE POPUP
(
	POPUP_IDX      NUMERIC(10) PRIMARY KEY,
	POPUP_URL      VARCHAR(256),
	POPUP_STATE    CHAR(1)                   DEFAULT 'S',
	POPUP_START    VARCHAR(10),
	POPUP_END      VARCHAR(10),
	POPUP_TOP      NUMERIC(4),
	POPUP_WIDTH    NUMERIC(4),
	POPUP_HEIGHT   NUMERIC(4),
	POPUP_TYPE     CHAR(1)                   DEFAULT 'F',
	POPUP_TITLE    VARCHAR(128),
	POPUP_LEFT     NUMERIC(4),
	POPUP_CONTENT  TEXT
) ENGINE=INNODB;

-- [POP_BEFORE_SMTP] 
DROP TABLE IF EXISTS POP_BEFORE_SMTP;
CREATE TABLE POP_BEFORE_SMTP
(
	IP_ADDRESS VARCHAR (100) NOT NULL PRIMARY KEY,
	SESSION_TIME DATETIME NOT NULL
) ENGINE=INNODB;

-- [PUBLICADDRESS] 
DROP TABLE IF EXISTS PUBLICADDRESS;
CREATE TABLE PUBLICADDRESS
(
	PUBLICADDRESS_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	PUBLICGROUP_IDX NUMERIC (9) NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	PUBLICADDRESS_NAME VARCHAR (100) ,
	PUBLICADDRESS_DEPT VARCHAR (100) ,
	PUBLICADDRESS_DUTY VARCHAR (100) ,
	PUBLICADDRESS_EMAIL VARCHAR (200) ,
	PUBLICADDRESS_TEL VARCHAR (100) ,
	PUBLICADDRESS_CELLTEL VARCHAR (100) ,
	PUBLICADDRESS_HOMEZIP VARCHAR (100) ,
	PUBLICADDRESS_HOMEADDR VARCHAR (100) ,
	PUBLICADDRESS_SORT_NO NUMERIC ,
	INDEX IDX_PUBLICADDRESS_1(PUBLICGROUP_IDX)
) ENGINE=INNODB;

-- [PUBLICGROUP] 
DROP TABLE IF EXISTS PUBLICGROUP;
CREATE TABLE PUBLICGROUP
(
	PUBLICGROUP_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	PUBLICGROUP_DEF NUMERIC (9) NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	PUBLICGROUP_NAME VARCHAR (200) NOT NULL ,
	PUBLICGROUP_SORT_NO NUMERIC ,
	INDEX IDX_PUBLICGROUP_1(PUBLICGROUP_DEF)
) ENGINE=INNODB;

-- [REL_NOTE_ATTACHE] 
DROP TABLE IF EXISTS REL_NOTE_ATTACHE;
CREATE TABLE REL_NOTE_ATTACHE
(
  	NOTE_IDX NUMERIC ,
  	NOTE_ATTACHE_IDX NUMERIC,
  	INDEX IDX_REL_NOTE_ATTACHE1(NOTE_IDX),
	INDEX IDX_REL_NOTE_ATTACHE2(NOTE_ATTACHE_IDX)
) ENGINE=INNODB;

-- [RESERVATION] 
DROP TABLE IF EXISTS RESERVATION;
CREATE TABLE RESERVATION
(
	RESERVATION_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	USERS_IDX VARCHAR (200) ,
	RESERVATION_TO text ,
	RESERVATION_FILE VARCHAR (200) ,
	RESERVATION_TIME DATETIME ,
	MAIL_RECONF_IDX NUMERIC (10) NOT NULL ,
	INDEX IDX_RESERVATION_1(USERS_IDX),
	INDEX IDX_RESERVATION_2(MAIL_RECONF_IDX)
) ENGINE=INNODB;

-- [RESERVEID] 
DROP TABLE IF EXISTS RESERVEID;
CREATE TABLE RESERVEID
(
	RESERVEID_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	RESERVEID_ID VARCHAR (100)
) ENGINE=INNODB;

-- [SCHEDULE] 
DROP TABLE IF EXISTS SCHEDULE;
CREATE TABLE SCHEDULE
(
	SCHEDULE_IDX NUMERIC (9) NOT NULL PRIMARY KEY,
	P_SCHEDULE_IDX NUMERIC (9) ,
	USERS_IDX VARCHAR (200) ,
	USERS_NAME VARCHAR (100) ,
	DOMAIN VARCHAR (100) ,
	USER_GROUP_IDX NUMERIC (9) ,
	SCHEDULE_SHARE NUMERIC (1) ,
	SCHEDULE_TYPE NUMERIC (1) ,
	SCHEDULE_TITLE VARCHAR (200) ,
	SCHEDULE_STMT VARCHAR (2000) ,
	SCHEDULE_SDATE DATETIME ,
	SCHEDULE_EDATE DATETIME ,
	SCHEDULE_REPEAT NUMERIC (1) ,
	SCHEDULE_DAYLY NUMERIC (1) ,
	SCHEDULE_ALAM NUMERIC (1) ,
	SCHEDULE_ALAM_DATE DATETIME ,
	SCHEDULE_ALAM_WAY NUMERIC (1) ,
	SCHEDULE_DDAY NUMERIC (1) ,
	SHARE_GROUP_IDX VARCHAR (200),
	INDEX IDX1_SCHEDULE(USERS_IDX, SCHEDULE_SDATE, SCHEDULE_EDATE),
	INDEX IDX2_SCHEDULE(DOMAIN, SCHEDULE_SDATE, SCHEDULE_EDATE),
	INDEX IDX3_SCHEDULE(SCHEDULE_SDATE, SCHEDULE_EDATE)
) ENGINE=INNODB;

-- [SHARE_GROUP] 
DROP TABLE IF EXISTS SHARE_GROUP;
CREATE TABLE SHARE_GROUP
(
	SHARE_GROUP_IDX NUMERIC NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	SHARE_GROUP_DEF NUMERIC NOT NULL ,
	SHARE_GROUP_REF NUMERIC NOT NULL ,
	SHARE_GROUP_NAME VARCHAR (255) NOT NULL ,
	SHARE_GROUP_DEFAULT NUMERIC ,
	SHARE_GROUP_HOMEDIR VARCHAR (255) NOT NULL ,
	SHARE_GROUP_QUOTA NUMERIC (20) ,
	SHARE_GROUP_STATUS CHAR (1) DEFAULT 'S'
) ENGINE=INNODB;

-- [SHARE_GROUP_LIST] 
DROP TABLE IF EXISTS SHARE_GROUP_LIST;
CREATE TABLE SHARE_GROUP_LIST
(
	SHARE_GROUP_LIST_IDX NUMERIC NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_IDX VARCHAR (255) NOT NULL ,
	SHARE_GROUP_IDX NUMERIC NOT NULL ,
	SHARE_STATUS CHAR (1) DEFAULT 'S' ,
	SHARE_AUTH VARCHAR (2) DEFAULT '10' NOT NULL
) ENGINE=INNODB;

-- [SMS_EMOTICON] 
DROP TABLE IF EXISTS SMS_EMOTICON;
CREATE TABLE SMS_EMOTICON
(
	SEQ_NO NUMERIC (9) NOT NULL PRIMARY KEY,
	TITLE VARCHAR (50) ,
	CONTENT text ,
	REG_DT VARCHAR (8) ,
	FLAG_NO NUMERIC (9) NOT NULL ,
	CNT NUMERIC (5) DEFAULT 0
) ENGINE=INNODB;

-- [SMS_EMOTI_FLAG] 
DROP TABLE IF EXISTS SMS_EMOTI_FLAG;
CREATE TABLE SMS_EMOTI_FLAG
(
	FLAG_NO NUMERIC (9) NOT NULL PRIMARY KEY,
	FLAG VARCHAR (100)
) ENGINE=INNODB;

-- [SYSTEM_INFO] 
DROP TABLE IF EXISTS SYSTEM_INFO;
CREATE TABLE SYSTEM_INFO
(
	SYSTEM_INFO_IDX VARCHAR (100) NOT NULL PRIMARY KEY,
	SYSTEM_INFO_VALUE text
) ENGINE=INNODB;

-- [USERS_DELETE] 
DROP TABLE IF EXISTS USERS_DELETE;
CREATE TABLE USERS_DELETE
(
	USERS_DELETE_IDX NUMERIC (10) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_DELETE_ID VARCHAR (100) ,
	USERS_DELETE_NAME VARCHAR (200) ,
	USERS_DELETE_PASSWD VARCHAR (200) ,
	USERS_DELETE_JUMIN1 VARCHAR (200) ,
	USERS_DELETE_JUMIN2 VARCHAR (200) ,
	USERS_DELETE_DEPARTMENT VARCHAR (100) ,
	USERS_DELETE_LICENCENUM VARCHAR (200)
) ENGINE=INNODB;

-- [USERS] 
DROP TABLE IF EXISTS USERS ;
CREATE TABLE USERS
(
	USERS_IDX VARCHAR (200) NOT NULL PRIMARY KEY,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_ID VARCHAR (100) NOT NULL ,
	USERS_PASSWD VARCHAR (200) NOT NULL ,
	USERS_NAME VARCHAR (50) NOT NULL ,
	USERS_ENGNAME VARCHAR (50) ,
	USERS_HOMEDIR VARCHAR (500) NOT NULL ,
	USERS_PERMIT CHAR (1) NOT NULL ,
	USERS_AUTH CHAR (1) NOT NULL ,
	USERS_NICKNAME VARCHAR (40) ,
	USERS_JUMIN1 VARCHAR (200) ,
	USERS_JUMIN2 VARCHAR (200) ,
	USERS_SEX CHAR (1) ,
	USERS_BIRTH VARCHAR (10) ,
	USERS_ISSOLAR CHAR (1) ,
	USERS_CELLNO VARCHAR (200) ,
	USERS_FAXNO VARCHAR (200) ,
	USERS_TELNO VARCHAR (200) ,
	USERS_ZIPCODE VARCHAR (200) ,
	USERS_ADDRESS1 VARCHAR (500) ,
	USERS_ADDRESS2 VARCHAR (500) ,
	USERS_JOBCODE CHAR (4) ,
	USERS_COMPNAME CHAR(1) DEFAULT 'T' ,
	USERS_DEPARTMENT VARCHAR (500) ,
	USERS_PREVEMAIL VARCHAR (50) ,
	USERS_SCHOOLING CHAR (4) ,
	USERS_INTEREST CHAR (4) ,
	USERS_LICENCENUM VARCHAR (200) ,
	USERS_ISOPEN VARCHAR (50) DEFAULT 'N' ,
	USERS_JOINDATE DATETIME ,
	USERS_EXPIREDDATE DATETIME ,
	USERS_LOGCOUNT NUMERIC (10) ,
	USERS_LASTHOST VARCHAR (40) ,
	USERS_MAX_VOLUME NUMERIC (20) ,
	USERS_CUR_VOLUME NUMERIC (20) ,
	USERS_LASTDATE DATETIME ,
	USERS_SIGNATURE CHAR (1) ,
	USERS_SIGNATURESTMT text ,
	USERS_AUTORE CHAR (1) ,
	USERS_AUTORESTMT text ,
	USERS_USENAME CHAR (1) ,
	USERS_SENDBOX CHAR (1) ,
	USERS_DELBOX CHAR (1) ,
	USERS_AUTO_DEL CHAR (1) ,
	USERS_LISTNUM NUMERIC (3) ,
	USERS_ISVOTE CHAR (1) ,
	USERS_ABSENT CHAR (1) ,
	USERS_ABSENT_SDATE DATETIME ,
	USERS_ABSENT_EDATE DATETIME ,
	USERS_ABSENT_RESTMT text ,
	USERS_OPT_FWD CHAR (1) ,
	USERS_OPT_FWD_SAVE CHAR (1) ,
	USERS_FWD_LIST VARCHAR (2000) ,
	USERS_READDR VARCHAR (2000) ,
	USERS_SPAM_LEVEL CHAR (1) ,
	USERS_DEL_WASTE NUMERIC (2) ,
	USERS_DEL_SPAM NUMERIC (2) ,
	USERS_LANG VARCHAR (10) ,
	USERS_MAIL_ALARM NUMERIC (3) ,
	USERS_ALARM_SOUND NUMERIC (2) ,
	USERS_INDEX_PAGE CHAR (1) ,
	USERS_RECEIVE_INFOMAIL CHAR (1) ,
	USERS_MAIL_VIEW NUMERIC (1) ,
	USERS_MAIL_INJURE CHAR (1) ,
	USERS_ORGANIZE_IDX NUMERIC (9) ,
	USERS_AUTHORITY_IDX NUMERIC (9) ,
	USERS_SMS_QUOTA NUMERIC (9) ,
	USERS_MAIL_QUOTA NUMERIC (10) DEFAULT '0' NOT NULL ,
	USERS_MEMO text ,
	USERS_MSG_YN CHAR (1) ,
	USERS_MENTO_YN CHAR (1) ,
	USERS_USETAG CHAR (1) DEFAULT 'Y' ,
	USERS_USE_MAIL_PREVIEW CHAR (1) DEFAULT 'Y' ,
	MAX_BIG_UPLOAD_SIZE NUMERIC DEFAULT 0 ,
	USERS_PWD_FAIL_COUNT NUMERIC (1) DEFAULT 0 ,
	USERS_PWD_FAIL_DATE DATETIME ,
	USERS_PWD_LOCKED CHAR (1) DEFAULT 'N' ,
	USERS_ACCOUNT_CHANGE_DATE DATETIME ,
	USERS_BOARD_AUTH CHAR (1) DEFAULT 'N' ,
	USERS_INFO_OPEN_AGREEMENT CHAR (1) DEFAULT 'N' ,
	USERS_FWD_AUTH CHAR (1) DEFAULT 'N' ,
	USERS_MAIL_BLOCKING_AUTH CHAR (1) DEFAULT 'N' ,
	USERS_AUTORE_LIST VARCHAR(1000) ,
	USERS_OPT_AUTORE CHAR(1) DEFAULT 'N' ,
	USERS_DELEGATE CHAR(1) DEFAULT 'T' ,
	USERS_DELEGATE_LIST text ,
	USERS_SMS_MAX_QUOTA NUMERIC(10) DEFAULT 0 ,
	USERS_BG_COLOR CHAR(1) DEFAULT '2' ,
	USERS_MAIL_VIEW_MODE CHAR(1) DEFAULT '0' ,
	USERS_LOGIN_MODE VARCHAR(5) DEFAULT 'std' ,
	TAG_FILTER_LEVEL NUMERIC(1) DEFAULT 1,
	USERS_JOBTITLE VARCHAR(200) 
) ENGINE=INNODB;

-- [USERS_KEYS] 
DROP TABLE IF EXISTS USERS_KEYS;
CREATE TABLE USERS_KEYS
(
USERS_IDX VARCHAR (200) NOT NULL ,
	CNS VARCHAR (128) NOT NULL ,
	OUS VARCHAR (128) ,
	OS VARCHAR (128) ,
	CS VARCHAR (128) ,
	SERIALKEY VARCHAR (128) NOT NULL ,
	TYPE CHAR (1) DEFAULT 'G' ,
	DATETO VARCHAR (24) ,
	DATEFROM VARCHAR (24) ,
	PRIMARY KEY PK_USERS_KEYS(USERS_IDX ,SERIALKEY )
) ENGINE=INNODB;

-- [USERS_PAUSE] 
DROP TABLE IF EXISTS USERS_PAUSE;
CREATE TABLE USERS_PAUSE
(
	USERS_PAUSE_IDX NUMERIC (10) NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_PAUSE_ID VARCHAR (100) ,
	USERS_PAUSE_NAME VARCHAR (200) ,
	USERS_PAUSE_PASSWD VARCHAR (200) ,
	USERS_PAUSE_JUMIN1 VARCHAR (200) ,
	USERS_PAUSE_JUMIN2 VARCHAR (200) ,
	USERS_PAUSE_DEPARTMENT VARCHAR (100) ,
	USERS_PAUSE_LICENCENUM VARCHAR (200) ,
	PRIMARY KEY PK_USERS_PAUSE(USERS_PAUSE_IDX)
) ENGINE=INNODB;

-- [USERS_RECENT_ADDRESS] 
DROP TABLE IF EXISTS USERS_RECENT_ADDRESS;
CREATE TABLE USERS_RECENT_ADDRESS
(
	RECENT_ADDRESS_IDX NUMERIC NOT NULL ,
	USERS_IDX VARCHAR (200) NOT NULL ,
	ORD_IDX NUMERIC ,
	ADDRESS_NAME VARCHAR (200) ,
	ADDRESS_EMAIL VARCHAR (200) NOT NULL ,
	USING_DT DATETIME,
  	PRIMARY KEY PK_USERS_RECENT_ADDRESS(RECENT_ADDRESS_IDX ),
  	INDEX  IDX_USERS_RECENT_ADDRESS_01(USERS_IDX)
) ENGINE=INNODB;

-- [USERS_REGIST] 
DROP TABLE IF EXISTS USERS_REGIST;
CREATE TABLE USERS_REGIST
(
	USERS_REGIST_IDX NUMERIC (10) NOT NULL ,
	DOMAIN VARCHAR (100) NOT NULL ,
	USERS_REGIST_ID VARCHAR (100) ,
	USERS_REGIST_NAME VARCHAR (200) ,
	USERS_REGIST_PASSWD VARCHAR (200) ,
	USERS_REGIST_JUMIN1 VARCHAR (200) ,
	USERS_REGIST_JUMIN2 VARCHAR (200) ,
	USERS_REGIST_DEPARTMENT VARCHAR (100) ,
	USERS_REGIST_LICENCENUM VARCHAR (200) ,
	PRIMARY KEY PK_USERS_REGIST(USERS_REGIST_IDX )
) ENGINE=INNODB;

-- [USER_DUTY] 
DROP TABLE IF EXISTS USER_DUTY;
CREATE TABLE USER_DUTY
(
	DUTY CHAR (18) NOT NULL ,
	DUTY_SORT_NO CHAR (18) ,
  	PRIMARY KEY PK_USER_DUTY(DUTY)
) ENGINE=INNODB;

-- [USER_GROUP] 
DROP TABLE IF EXISTS USER_GROUP;
CREATE TABLE USER_GROUP
(
	USER_GROUP_IDX NUMERIC (9) NOT NULL ,
	P_USER_GROUP_IDX NUMERIC (9) ,
	USER_GROUP_NAME VARCHAR (200) ,
	USER_GROUP_SORT_NO NUMERIC ,
	DOMAIN VARCHAR (100) ,
	USER_GROUP_DEFAULT NCHAR(2),
	USER_GROUP_FUNCTION VARCHAR (20) ,
	USER_GROUP_VOLUME NUMERIC(18),
	USER_GROUP_MAIL NUMERIC(1),
	USER_GROUP_SCHEDULE NUMERIC (1) ,
	USER_GROUP_STRUCTURE NUMERIC (1) ,
	USER_GROUP_SMS_QUOTA NUMERIC NOT NULL ,
	USER_GROUP_ADDRESS NUMERIC (1) ,
  	PRIMARY KEY PK_USER_GROUP(USER_GROUP_IDX )
) ENGINE=INNODB;

-- [USER_GROUP_LIST] 
DROP TABLE IF EXISTS USER_GROUP_LIST;
CREATE TABLE USER_GROUP_LIST
(
	USER_GROUP_LIST_IDX NUMERIC NOT NULL ,
	USERS_IDX VARCHAR (200) ,
	USER_GROUP_SORT_NO NUMERIC ,
	DOMAIN VARCHAR (100) ,
	USER_GROUP_IDX NUMERIC (9) NOT NULL ,
	DUTY VARCHAR (200) ,
	PRIMARY KEY PK_USER_GROUP_LIST(USER_GROUP_LIST_IDX ),
	INDEX IDX_USER_GROUP_LIST_1(USERS_IDX),
	INDEX IDX_USER_GROUP_LIST_2(USER_GROUP_IDX) 
) ENGINE=INNODB;

-- [ZIPCODE] 
DROP TABLE IF EXISTS ZIPCODE;
CREATE TABLE ZIPCODE
(
	ZIPCODE_CD VARCHAR (255) NOT NULL ,
	ZIPCODE_ADDR1 VARCHAR (255) ,
	ZIPCODE_ADDR2 VARCHAR (255) ,
	ZIPCODE_ADDR3 VARCHAR (255) ,
	ZIPCODE_ADDR4 VARCHAR (255) ,
	ZIPCODE_CHANGE VARCHAR (255) 
) ENGINE=INNODB;

-- [USERS_PASSWD_CHANGE] 
DROP TABLE IF EXISTS USERS_PASSWD_CHANGE;
CREATE TABLE USERS_PASSWD_CHANGE
(
    USERS_PASSWD_CHANGE_IDX NUMERIC,
    USERS_IDX VARCHAR(400) NOT NULL,
    BEFORE_PASSWD VARCHAR(400) NOT NULL,
    AFTER_PASSWD VARCHAR(400) NOT NULL,
    CONNECT_IP VARCHAR(15),
    CHANGE_DATE DATETIME NOT NULL,
    PRIMARY KEY PK_USERS_PASSWD_CHANGE(USERS_PASSWD_CHANGE_IDX),
    INDEX IDX_USERS_PASSWD_CHANGE_1(USERS_IDX)
) ENGINE=INNODB;

-- [ADMINLOGTRACKENTITY] 
DROP TABLE IF EXISTS ADMINLOGTRACKENTITY;
CREATE TABLE ADMINLOGTRACKENTITY
(
	ADMIN_LOG_IDX    NUMERIC NOT NULL,
	WEB_SESSION_ID   VARCHAR(300) NOT NULL,
	USERS_IDX        VARCHAR(40),
	USERS_ID         VARCHAR(20),
	CONNECT_TIME     DATETIME NOT NULL,
	DOMAIN           VARCHAR(20),
	USERS_AUTH       CHAR(1),
	USER_ACTION      CHAR(2),
	ACTION_MENU      CHAR(2),
	USERS_CONTENT    TEXT,
	TARGET_USERS_IDS VARCHAR(3000),
	ACTION_GUBUN     CHAR(1) DEFAULT 0,
	PRIMARY KEY PK_ADMINLOGTRACKENTITY(ADMIN_LOG_IDX)
) ENGINE=INNODB;

-- [ADMINLOGTRACKENTITY_TMP] 
DROP TABLE IF EXISTS ADMINLOGTRACKENTITY_TMP;
CREATE TABLE ADMINLOGTRACKENTITY_TMP
(
	ADMIN_LOG_IDX  NUMERIC NOT NULL,
	WEB_SESSION_ID VARCHAR(300) NOT NULL,
	USERS_IDX      VARCHAR(40),
	USERS_ID       VARCHAR(20),
	CONNECT_TIME   DATETIME NOT NULL,
	USERS_CONTENT  TEXT
) ENGINE=INNODB;

-- [BATCH_LOG] 
DROP TABLE IF EXISTS BATCH_LOG ;
CREATE TABLE BATCH_LOG (
	BATCH_LOG_IDX    NUMERIC             NOT NULL, 
	BATCH_LOG_MSG    VARCHAR(10)       NULL, 
	BATCH_LOG_SDATE  DATETIME               NULL, 
	BATCH_LOG_EDATE  DATETIME               NULL,
	PRIMARY KEY PK_BATCH_LOG( BATCH_LOG_IDX )
) ENGINE=INNODB;

-- [LINKAGE_GRANTIP] 
DROP TABLE IF EXISTS LINKAGE_GRANTIP;
CREATE TABLE LINKAGE_GRANTIP
(
	GRANT_IP_IDX  NUMERIC(2)                       NOT NULL,
	GRANT_IP      VARCHAR(15)               NOT NULL,
	USERS_IDX     VARCHAR(200),
	INSERT_DATE   DATETIME,
	UPDATE_DATE   DATETIME,
	PRIMARY KEY PK_LINKAGE_GRANTIP(GRANT_IP_IDX)
) ENGINE=INNODB;

-- [USERS_SIGNATURE] 
DROP TABLE IF EXISTS USERS_SIGNATURE ;
CREATE TABLE USERS_SIGNATURE
(
	SIGN_IDX    NUMERIC       NOT NULL,
	USERS_IDX   VARCHAR(200) NOT NULL,
	SIGN_TITLE  text,
	SIGN_DEFAULT NUMERIC(1) DEFAULT 0,
	SIGN_STMT   text,
	PRIMARY KEY PK_USERS_SIGNATURE(SIGN_IDX),
	INDEX IDX_SIGNATURE_01(USERS_IDX)
) ENGINE=INNODB;              

-- [USER_GROUP2] 
DROP TABLE IF EXISTS USER_GROUP2 ;
CREATE TABLE USER_GROUP2 (
	USER_GROUP_IDX          NUMERIC(9)         NOT NULL, 
	P_USER_GROUP_IDX        NUMERIC(9)             NULL, 
	USER_GROUP_NAME         VARCHAR(200)         NULL, 
	USER_GROUP_SORT_NO      NUMERIC                NULL, 
	DOMAIN                  VARCHAR(100)         NULL, 
	USER_GROUP_DEFAULT      NCHAR(32)             NULL, 
	USER_GROUP_FUNCTION     VARCHAR(20)          NULL, 
	USER_GROUP_VOLUME       NUMERIC            NULL, 
	USER_GROUP_MAIL         NUMERIC(1)             NULL, 
	USER_GROUP_SCHEDULE     NUMERIC(1)             NULL, 
	USER_GROUP_STRUCTURE    NUMERIC(1)             NULL, 
	USER_GROUP_SMS_QUOTA    NUMERIC            NOT NULL, 
	USER_GROUP_ADDRESS      NUMERIC(1)             NULL, 
	USER_GROUP_CODE         VARCHAR(50)          NULL, 
	USER_GROUP_TOPCODE      VARCHAR(50)          NULL,
	PRIMARY KEY PK_USER_GROUP2(USER_GROUP_IDX )
) ENGINE=INNODB;

-- [USER_GROUP3] 
DROP TABLE IF EXISTS USER_GROUP3 ;
CREATE TABLE USER_GROUP3 (
	USER_GROUP_IDX          NUMERIC(9)         NOT NULL, 
	P_USER_GROUP_IDX        NUMERIC(9)             NULL, 
	USER_GROUP_NAME         VARCHAR(200)         NULL, 
	USER_GROUP_SORT_NO      NUMERIC                NULL, 
	DOMAIN                  VARCHAR(100)         NULL, 
	USER_GROUP_DEFAULT      NCHAR(32)             NULL, 
	USER_GROUP_FUNCTION     VARCHAR(20)          NULL, 
	USER_GROUP_VOLUME       NUMERIC            NULL, 
	USER_GROUP_MAIL         NUMERIC(1)             NULL, 
	USER_GROUP_SCHEDULE     NUMERIC(1)             NULL, 
	USER_GROUP_STRUCTURE    NUMERIC(1)             NULL, 
	USER_GROUP_SMS_QUOTA    NUMERIC            NOT NULL, 
	USER_GROUP_ADDRESS      NUMERIC(1)             NULL, 
	USER_GROUP_CODE         VARCHAR(50)          NULL, 
	USER_GROUP_TOPCODE      VARCHAR(50)          NULL,
	PRIMARY KEY PK_USER_GROUP3(USER_GROUP_IDX )
) ENGINE=INNODB;

-- [USER_GROUP_LIST2] 
DROP TABLE IF EXISTS USER_GROUP_LIST2;
CREATE TABLE USER_GROUP_LIST2
(
  USER_GROUP_LIST_IDX NUMERIC NOT NULL ,
  USERS_IDX VARCHAR (200) ,
  USER_GROUP_SORT_NO NUMERIC ,
  DOMAIN VARCHAR (100) ,
  USER_GROUP_IDX NUMERIC (9) NOT NULL ,
  DUTY VARCHAR (200) ,
  PRIMARY KEY PK_USER_GROUP_LIST2(USER_GROUP_LIST_IDX )
) ENGINE=INNODB;

-- [USER_GROUP_LIST3] 
DROP TABLE IF EXISTS USER_GROUP_LIST3;
CREATE TABLE USER_GROUP_LIST3
(
  USER_GROUP_LIST_IDX NUMERIC NOT NULL ,
  USERS_IDX VARCHAR (200) ,
  USER_GROUP_SORT_NO NUMERIC ,
  DOMAIN VARCHAR (100) ,
  USER_GROUP_IDX NUMERIC (9) NOT NULL ,
  DUTY VARCHAR (200) ,
  PRIMARY KEY PK_USER_GROUP_LIST3(USER_GROUP_LIST_IDX )
) ENGINE=INNODB;

-- [SMS]
DROP TABLE IF EXISTS SMS ;
CREATE TABLE SMS
(
	SERIALNO       NUMERIC(9) NOT NULL, 
	DESTCALLNO     VARCHAR(16)  NULL,
	CALLBACKNO     VARCHAR(16)  NULL,
	DATA           VARCHAR(200)  NULL,
	JEOBSU_TIME    DATETIME,
	YEYAK_TIME     DATETIME,
	USER_NO        VARCHAR(200) NULL,
	COMPANY_NO     VARCHAR(200) NULL,
	RESULT         VARCHAR(200),
	TYPE           VARCHAR(10),
	PRIMARY KEY PK_SMS(SERIALNO)
) ENGINE=INNODB;

-- [TEMP_DATE_VAL]
DROP TABLE IF EXISTS TEMP_DATE_VAL ;
CREATE TABLE TEMP_DATE_VAL
(
	DATE_TYPE VARCHAR(4),
	DATE_VALUE VARCHAR(10),
	DATE_NAME  VARCHAR(10)
);

-- [KEBIMAIL_DISK]
DROP TABLE IF EXISTS DISK_CONFIG ;
CREATE TABLE DISK_CONFIG 
(
  DOMAIN                      VARCHAR(100),
  DISK_USER_ENABLE_FLAG       TINYINT, /* ????? ???? ??? ??�됵옙? ???? (1|0) */
  DISK_USER_MAX_QUOTA         BIGINT, /* ????? ??? ??? ???�됵옙*/
  BIGMAIL_MAX_VALIDITY_DAYS   INT, /* ??�됵옙??? ????? */
  BIGMAIL_MAX_DOWNLOAD_LIMIT  INT, /* ??�됵옙??? ???�� ??? */
  WEBLINK_FOLDER_ENABLE       TINYINT, /* ????? ??? ??? ???? (1|0) */
  GUEST_FOLDER_ENABLE         TINYINT, /* ???? ??? ??? ???? (1|0) */
  VIRUS_CHECK_ENABLE          TINYINT, /* ??????? u? ???? (1|0) */
  UPLOAD_FILE_SIZE_LIMIT      BIGINT,  /* ???�� ?�됵옙??? */
  LOG_USER_VIEW_MONTHS        INT, /* ????? ?�� ???? ??? */
  LOG_PRESERVATION_MONTHS     INT  /* ???? ?�� ???? ??? & ?�� ???????? */
) ENGINE=InnoDB;

DROP TABLE IF EXISTS DISK_FILE_FILTER ;
CREATE TABLE DISK_FILE_FILTER 
(
  FILTER_ID INT auto_increment,
  FILTER_ITEM VARCHAR(255),
  PRIMARY KEY (FILTER_ID)
) ENGINE=InnoDB;

DROP TABLE IF EXISTS DISK_IP_WHITELIST ;
CREATE TABLE DISK_IP_WHITELIST 
(
  WHITELIST_ID INT auto_increment,
  WHITELIST_IP VARCHAR(255),
  PRIMARY KEY (WHITELIST_ID)
) ENGINE=InnoDB;

DROP TABLE IF EXISTS DISK_IP_BLACKLIST ;
CREATE TABLE DISK_IP_BLACKLIST 
(
  BLACKLIST_ID INT auto_increment,
  BLACKLIST_IP VARCHAR(255),
  PRIMARY KEY (BLACKLIST_ID)
) ENGINE=InnoDB;

DROP TABLE IF EXISTS DISK_USER ;
CREATE TABLE DISK_USER
(
  USERS_IDX                   VARCHAR(200),
  USERS_PASSWD                VARCHAR(100),
  HOME_DIRECTORY              VARCHAR(255),
  ENABLE_FLAG                 TINYINT,
  READ_PERMISSION             TINYINT,
  WRITE_PERMISSION            TINYINT,
  REMOVE_PERMISSION           TINYINT,
  IDLE_TIME                   INT,  
  UPLOAD_RATE                 INT,  
  DOWNLOAD_RATE               INT, 
  MAX_LOGIN_NUMBER            INT, 
  MAX_LOGIN_PER_IP            INT, 
  DISK_USAGE                  BIGINT, 
  DISK_QUOTA                  BIGINT,  
  BIGMAIL_VALIDITY_DAYS       INT,
  BIGMAIL_DOWNLOAD_LIMIT      INT,
  BIGMAIL_MAX_VALIDITY_DAYS   INT,
  BIGMAIL_MAX_DOWNLOAD_LIMIT  INT,
  LAST_ACCESS_IP              VARCHAR(100),
  LAST_ACCESS_TIME            DATETIME,
  PRIMARY KEY (USERS_IDX)
) ENGINE=InnoDB;

DROP TABLE IF EXISTS DISK_GROUP ;
CREATE TABLE DISK_GROUP
(
  GROUP_IDX       INT auto_increment,
  USER_GROUP_IDX  INT,
  GROUP_NAME      VARCHAR(255),
  HOME_DIRECTORY  VARCHAR(255),
  ENABLE_FLAG     TINYINT,
  DISK_USAGE      BIGINT,
  DISK_QUOTA      BIGINT,
  PRIMARY KEY (GROUP_IDX)
) ENGINE=InnoDB;

CREATE INDEX IX_DISK_GROUP_NAME 
ON DISK_GROUP (GROUP_NAME);

DROP TABLE IF EXISTS DISK_GROUP_MEMBER ;
CREATE TABLE DISK_GROUP_MEMBER
(
  GROUP_IDX          INT,
  USERS_IDX          VARCHAR(200),
  ENABLE_FLAG        TINYINT,
  READ_PERMISSION    TINYINT,
  WRITE_PERMISSION   TINYINT,
  REMOVE_PERMISSION  TINYINT
) ENGINE=InnoDB;

CREATE INDEX IX_DISK_GROUP_MEMBER_GROUP_IDX 
ON DISK_GROUP_MEMBER (GROUP_IDX);

CREATE INDEX IX_DISK_GROUP_MEMBER_USERS_IDX 
ON DISK_GROUP_MEMBER (USERS_IDX);

DROP TABLE IF EXISTS DISK_GUEST ;
CREATE TABLE DISK_GUEST
(
  GUEST_ID           VARCHAR(50),
  GUEST_PASSWORD     VARCHAR(50),
  USERS_IDX          VARCHAR(200),
  EMAIL_ADDRESS      VARCHAR(200),
  HOME_DIRECTORY     VARCHAR(255),
  ENABLE_FLAG        TINYINT,
  READ_PERMISSION    TINYINT,
  WRITE_PERMISSION   TINYINT,
  REMOVE_PERMISSION  TINYINT,
  IDLE_TIME          INT,  
  UPLOAD_RATE        INT,
  DOWNLOAD_RATE      INT,
  MAX_LOGIN_NUMBER   INT,
  MAX_LOGIN_PER_IP   INT,
  EXPIRY_DATE        DATETIME,
  LOGIN_COUNT        INT,
  LAST_ACCESS_IP     VARCHAR(100),
  LAST_ACCESS_TIME   DATETIME,
  PRIMARY KEY (GUEST_ID)
) ENGINE=InnoDB;

CREATE INDEX IX_DISK_GUEST_USERS_IDX 
ON DISK_GUEST (USERS_IDX);

DROP TABLE IF EXISTS DISK_BIGMAIL ;
CREATE TABLE DISK_BIGMAIL
(
  FILE_ID         VARCHAR(255),
  USERS_IDX       VARCHAR(200),
  FILE_NAME       VARCHAR(255),
  FILE_SIZE       BIGINT,
  DOWNLOAD_COUNT  INT,
  DOWNLOAD_LIMIT  INT,
  UPLOAD_DATE     DATETIME,
  EXPIRY_DATE     DATETIME,
  PRIMARY KEY (FILE_ID)
) ENGINE=InnoDB;

CREATE INDEX IX_DISK_BIGMAIL_USERS_IDX 
ON DISK_BIGMAIL (USERS_IDX);

DROP TABLE IF EXISTS DISK_STATISTICS ;
CREATE TABLE DISK_STATISTICS
(
  DATE_HOUR        DATETIME,
  UPLOAD_COUNT     BIGINT DEFAULT 0,
  UPLOAD_AMOUNT    BIGINT DEFAULT 0,
  DOWNLOAD_COUNT   BIGINT DEFAULT 0,
  DOWNLOAD_AMOUNT  BIGINT DEFAULT 0,
  DELETE_COUNT     BIGINT DEFAULT 0,
  DELETE_AMOUNT    BIGINT DEFAULT 0,
  PRIMARY KEY (DATE_HOUR)
) ENGINE=InnoDB;

-- ALTER TABLE M_KEBICOM ADD USCAN_RESULT VARCHAR(100) DEFAULT NULL;
-- ALTER TABLE M_KEBICOM ADD IMAGE_CONVERT_RESULT VARCHAR(100) DEFAULT NULL;
-- ALTER TABLE M_KEBICOM ADD RCV_PHON_NUM VARCHAR(100) DEFAULT NULL;
-- ALTER TABLE M_KEBICOM ADD ADVICE_ID VARCHAR(100) DEFAULT NULL;

-- [SEQUENCE]
DELETE FROM SEQUENCE;
INSERT INTO SEQUENCE VALUE('POPUP', 1, 0);
INSERT INTO SEQUENCE VALUE('ECARD', 1, 0);
INSERT INTO SEQUENCE VALUE('PUBLICGROUP', 1, 0);
INSERT INTO SEQUENCE VALUE('PUBLICADDRESS', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP_LIST', 1, 0);
INSERT INTO SEQUENCE VALUE('MBOX', 1, 0);
INSERT INTO SEQUENCE VALUE('ANACONDA_FILE', 1, 0);
INSERT INTO SEQUENCE VALUE('LOGIN_LOG', 1, 0);
INSERT INTO SEQUENCE VALUE('SMS', 1, 0);
INSERT INTO SEQUENCE VALUE('SMS_EMOTICON', 1, 0);
INSERT INTO SEQUENCE VALUE('ADDRESS_GROUP', 1, 0);
INSERT INTO SEQUENCE VALUE('ADDRESS', 1, 0);
INSERT INTO SEQUENCE VALUE('FILE_SHARE', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_SIGNATURE', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_REGIST', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_PAUSE', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_DELETE', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_RECENT_ADDRESS', 1, 0);
INSERT INTO SEQUENCE VALUE('USERS_PASSWD_CHANGE', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP2', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP3', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP_LIST2', 1, 0);
INSERT INTO SEQUENCE VALUE('USER_GROUP_LIST3', 1, 0);
INSERT INTO SEQUENCE VALUE('SHARE_GROUP', 1, 0);
INSERT INTO SEQUENCE VALUE('SHARE_GROUP_LIST', 1, 0);
INSERT INTO SEQUENCE VALUE('RESERVEID', 1, 0);
INSERT INTO SEQUENCE VALUE('RESERVATION', 1, 0);
INSERT INTO SEQUENCE VALUE('POP', 1, 0);
INSERT INTO SEQUENCE VALUE('POLL', 1, 0);
INSERT INTO SEQUENCE VALUE('ORGANIZE', 1, 0);
INSERT INTO SEQUENCE VALUE('NOTE_RECONF', 1, 0);
INSERT INTO SEQUENCE VALUE('NOTE_ATTACHE', 1, 0);
INSERT INTO SEQUENCE VALUE('MEMO', 1, 0);
INSERT INTO SEQUENCE VALUE('MEMBER', 1, 0);
INSERT INTO SEQUENCE VALUE('MAIL_REPORT', 1, 0);
INSERT INTO SEQUENCE VALUE('INJURE', 1, 0);
INSERT INTO SEQUENCE VALUE('MANAGER_GRANTIP', 1, 0);
INSERT INTO SEQUENCE VALUE('LINKAGE_GRANTIP', 1, 0);
INSERT INTO SEQUENCE VALUE('FORMLETTER', 1, 0);
INSERT INTO SEQUENCE VALUE('FILTER', 1, 0);
INSERT INTO SEQUENCE VALUE('CERTIFY', 1, 0);
INSERT INTO SEQUENCE VALUE('BBS', 1, 0);
INSERT INTO SEQUENCE VALUE('BBS_GROUP', 1, 0);
INSERT INTO SEQUENCE VALUE('AUTODIVISION', 1, 0);
INSERT INTO SEQUENCE VALUE('ANACONDA_MAIL', 1, 0);
INSERT INTO SEQUENCE VALUE('ADMINLOGTRACKENTITY', 1, 0);
INSERT INTO SEQUENCE VALUE('ADMINLOGTRACKENTITY_TMP', 1, 0);
INSERT INTO SEQUENCE VALUE('MAIL_RECONF', 1, 0);
INSERT INTO SEQUENCE VALUE('SCHEDULE', 1, 0);
COMMIT;